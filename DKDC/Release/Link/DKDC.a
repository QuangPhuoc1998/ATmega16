;/*
; * ADC.c
; *
; * Created: 12/04/2019 20:44:02
; * Author: ADMIN
; */
;
;#include "main.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "lcd4.h"
;
;void ADC_Init();
;unsigned int Read_ADC(unsigned char channel);
;void PWM_Init();
;void PWM_Duty(unsigned char duty);
;void Capture_Init();
;void main(void)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0012 // khai bao bien
; 0000 0013 unsigned int c, cL, cH;
; 0000 0014 unsigned int vL, vH;
; 0000 0015 unsigned long int v, V;
; 0000 0016 //_______
; 0000 0017 unsigned long int a;
; 0000 0018 //_______
; 0000 0019 // cau hinh port
; 0000 001A DDRA.0 = 0; // channel ADC
;PCODE: $0000000E VOL: 0
;	c -> R16,R17
;	cL -> R18,R19
;	cH -> R20,R21
;	vL -> Y+14
;	vH -> Y+12
;	v -> Y+8
;	V -> Y+4
;	a -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 001B DDRB.3 = 1; // channel PWM
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 001C DDRC.0 = 1;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 001D DDRC.1 = 1;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001E DDRC.2 = 1;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001F DDRC.3 = 1;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0020 DDRC.4 = 1;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0021 DDRC.5 = 1;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0022 // chuong trinh con
; 0000 0023 Lcd_Init();
;PCODE: $0000001F VOL: 0
; 0000 0024 ADC_Init();
;PCODE: $00000020 VOL: 0
; 0000 0025 PWM_Init();
;PCODE: $00000021 VOL: 0
; 0000 0026 Capture_Init();
;PCODE: $00000022 VOL: 0
; 0000 0027 #asm ("sei");
;PCODE: $00000023 VOL: 0
	sei
;PCODE: $00000024 VOL: 0
; 0000 0028 // chuong trinh chinh
; 0000 0029 Lcd_Write_String("Gia tri: ");
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 002A Lcd_Set_Cursor(2,1);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002B Lcd_Write_String("Toc do: ");
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 002C while (1)
;PCODE: $0000002F VOL: 0
; 0000 002D     {
; 0000 002E       a = Read_ADC(0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002F       a = a*100/1023;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0030       PWM_Duty(a);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0031       // capture
; 0000 0032       cH = ICR1H;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0033       cL = ICR1L;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0034       c = (cH<<8)+cL;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0035       vL = cL*256*0.0625f;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0036       vH = cH*256*0.0625f;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0037       V = (vH<<8)+vL;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0038       v = 60000000/(V*24);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0039       //--------------
; 0000 003A       // gia tri
; 0000 003B       Lcd_Set_Cursor(1,10);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 003C       Lcd_Write_Char(a/1000+48);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 003D       Lcd_Write_Char((a%1000)/100+48);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 003E       Lcd_Write_Char((a%100)/10+48);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 003F       Lcd_Write_Char(a%10+48);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0040       // toc do
; 0000 0041       Lcd_Set_Cursor(2, 9);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0042       Lcd_Write_Char(v/10000+48);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0043       Lcd_Write_Char((v%10000)/1000+48);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0044       Lcd_Write_Char((v%1000)/100+48);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0045       Lcd_Write_Char((v%100)/10+48);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0046       Lcd_Write_Char(v%10+48);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0047       delay_ms(1);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0048     }
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0049 }
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0

	.DSEG
_0x13:
	.BYTE 0x13
;void ADC_Init()
; 0000 004B {

	.CSEG
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 004C   // thanh ghi ADMUX
; 0000 004D   ADMUX |= (1<<REFS0); // dien ap: AVCC, ADCL chua 8 bit thap
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 004E   // thanh ghi ADCSRA
; 0000 004F   ADCSRA |= (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(ADPS0); // cho phep ADC, chia 128
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0050 }
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;unsigned int Read_ADC(unsigned char channel)
; 0000 0052 {
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0053   ADMUX |= channel;
;PCODE: $000000C4 VOL: 0
;	channel -> Y+0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0054   delay_us(10);
;PCODE: $000000C9 VOL: 0
; 0000 0055   ADCSRA |= (1<<ADSC); // cho phep bat dau chuyen doi
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0056   while(ADIF==0);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0057   ADCSRA |= (1<<ADIF);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0058   return ADCW;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0059 }
;PCODE: $000000D5 VOL: 0
;void PWM_Init()
; 0000 005B {
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 005C   // thanh ghi TCCR0
; 0000 005D   TCCR0 = 0;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 005E   // thanh ghi TCCR0
; 0000 005F   TCCR0 |= (1<<WGM01)|(1<<WGM00)|(1<<COM01)|(1<<CS02)|(1<<CS00); // 1024
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0060   OCR0 = 0;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0061 }
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;void PWM_Duty(unsigned char duty)
; 0000 0063 {
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0064   duty = duty*255/100;
;PCODE: $000000E3 VOL: 0
;	duty -> Y+0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0065   OCR0 = duty;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0066 }
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;void Capture_Init()
; 0000 0068 {
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0069   DDRD.6 = 0;
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 006A   PORTD.6 = 0;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 006B   TCNT1 = 0;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 006C   TCCR1A = 0x00;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 006D   TCCR1B |= (1<<ICNC1)|(1<<CS12);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 006E   TIMSK |= (1<<TICIE1);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 006F }
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;interrupt [TIM1_CAPT] void tim1_capt_isr(void)
; 0000 0071 {
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 0072   TCNT1 = 0;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0073   TCCR1B |= (0<<CS12)|(0<<CS12)|(0<<CS12);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0074 }
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;
