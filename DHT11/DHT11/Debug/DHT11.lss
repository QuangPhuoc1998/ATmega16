
DHT11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d7a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000d7a  00000e0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800080  00800080  00000e2e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ab6  00000000  00000000  00000fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008aa  00000000  00000000  00002a96  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cb7  00000000  00000000  00003340  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  00003ff8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fb  00000000  00000000  000042bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e5e  00000000  00000000  000047b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00005615  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e7       	ldi	r30, 0x7A	; 122
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e8       	ldi	r26, 0x80	; 128
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 38       	cpi	r26, 0x81	; 129
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 bd 02 	call	0x57a	; 0x57a <main>
  8a:	0c 94 bb 06 	jmp	0xd76	; 0xd76 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <pinChange+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <pinChange+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <pinChange+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <pinChange+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <pinChange+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <pinChange+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <pinChange+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinChange+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <pinChange+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <pinChange+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <pinChange+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <pinChange+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <pinChange+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <Lcd4_Port>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <Lcd4_Port+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	80 e2       	ldi	r24, 0x20	; 32
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 326:	06 c0       	rjmp	.+12     	; 0x334 <Lcd4_Port+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	80 e2       	ldi	r24, 0x20	; 32
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <Lcd4_Port+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	81 e2       	ldi	r24, 0x21	; 33
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 344:	06 c0       	rjmp	.+12     	; 0x352 <Lcd4_Port+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	81 e2       	ldi	r24, 0x21	; 33
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <Lcd4_Port+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	82 e2       	ldi	r24, 0x22	; 34
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 362:	06 c0       	rjmp	.+12     	; 0x370 <Lcd4_Port+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	82 e2       	ldi	r24, 0x22	; 34
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <Lcd4_Port+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	83 e2       	ldi	r24, 0x23	; 35
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 380:	06 c0       	rjmp	.+12     	; 0x38e <Lcd4_Port+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	83 e2       	ldi	r24, 0x23	; 35
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <Lcd4_Cmd>:
 392:	cf 93       	push	r28
 394:	c8 2f       	mov	r28, r24
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	85 e2       	ldi	r24, 0x25	; 37
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	84 e2       	ldi	r24, 0x24	; 36
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3b4:	8f e9       	ldi	r24, 0x9F	; 159
 3b6:	9f e0       	ldi	r25, 0x0F	; 15
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <Lcd4_Cmd+0x26>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <Lcd4_Cmd+0x2c>
 3be:	00 00       	nop
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	84 e2       	ldi	r24, 0x24	; 36
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3cc:	8f e9       	ldi	r24, 0x9F	; 159
 3ce:	9f e0       	ldi	r25, 0x0F	; 15
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <Lcd4_Cmd+0x3e>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <Lcd4_Cmd+0x44>
 3d6:	00 00       	nop
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <Lcd4_Set_Cursor>:
 3dc:	cf 93       	push	r28
 3de:	c6 2f       	mov	r28, r22
 3e0:	81 30       	cpi	r24, 0x01	; 1
 3e2:	59 f4       	brne	.+22     	; 0x3fa <Lcd4_Set_Cursor+0x1e>
 3e4:	80 e8       	ldi	r24, 0x80	; 128
 3e6:	86 0f       	add	r24, r22
 3e8:	82 95       	swap	r24
 3ea:	8f 70       	andi	r24, 0x0F	; 15
 3ec:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3f0:	8c 2f       	mov	r24, r28
 3f2:	8f 70       	andi	r24, 0x0F	; 15
 3f4:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3f8:	0c c0       	rjmp	.+24     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fa:	82 30       	cpi	r24, 0x02	; 2
 3fc:	51 f4       	brne	.+20     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fe:	80 ec       	ldi	r24, 0xC0	; 192
 400:	86 0f       	add	r24, r22
 402:	82 95       	swap	r24
 404:	8f 70       	andi	r24, 0x0F	; 15
 406:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 40a:	8c 2f       	mov	r24, r28
 40c:	8f 70       	andi	r24, 0x0F	; 15
 40e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 412:	cf 91       	pop	r28
 414:	08 95       	ret

00000416 <Lcd4_Init>:
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 41c:	2f ef       	ldi	r18, 0xFF	; 255
 41e:	89 ef       	ldi	r24, 0xF9	; 249
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	21 50       	subi	r18, 0x01	; 1
 424:	80 40       	sbci	r24, 0x00	; 0
 426:	90 40       	sbci	r25, 0x00	; 0
 428:	e1 f7       	brne	.-8      	; 0x422 <Lcd4_Init+0xc>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <Lcd4_Init+0x16>
 42c:	00 00       	nop
 42e:	83 e0       	ldi	r24, 0x03	; 3
 430:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 434:	8f e1       	ldi	r24, 0x1F	; 31
 436:	9e e4       	ldi	r25, 0x4E	; 78
 438:	01 97       	sbiw	r24, 0x01	; 1
 43a:	f1 f7       	brne	.-4      	; 0x438 <Lcd4_Init+0x22>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <Lcd4_Init+0x28>
 43e:	00 00       	nop
 440:	83 e0       	ldi	r24, 0x03	; 3
 442:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 446:	8f ed       	ldi	r24, 0xDF	; 223
 448:	9b ea       	ldi	r25, 0xAB	; 171
 44a:	01 97       	sbiw	r24, 0x01	; 1
 44c:	f1 f7       	brne	.-4      	; 0x44a <Lcd4_Init+0x34>
 44e:	00 c0       	rjmp	.+0      	; 0x450 <Lcd4_Init+0x3a>
 450:	00 00       	nop
 452:	83 e0       	ldi	r24, 0x03	; 3
 454:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 458:	82 e0       	ldi	r24, 0x02	; 2
 45a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 45e:	82 e0       	ldi	r24, 0x02	; 2
 460:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 464:	88 e0       	ldi	r24, 0x08	; 8
 466:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 470:	8c e0       	ldi	r24, 0x0C	; 12
 472:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 47c:	86 e0       	ldi	r24, 0x06	; 6
 47e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 482:	08 95       	ret

00000484 <Lcd4_Write_Char>:
 484:	cf 93       	push	r28
 486:	c8 2f       	mov	r28, r24
 488:	61 e0       	ldi	r22, 0x01	; 1
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	85 e2       	ldi	r24, 0x25	; 37
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 494:	8c 2f       	mov	r24, r28
 496:	82 95       	swap	r24
 498:	8f 70       	andi	r24, 0x0F	; 15
 49a:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 49e:	61 e0       	ldi	r22, 0x01	; 1
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	84 e2       	ldi	r24, 0x24	; 36
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4aa:	8f e9       	ldi	r24, 0x9F	; 159
 4ac:	9f e0       	ldi	r25, 0x0F	; 15
 4ae:	01 97       	sbiw	r24, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <Lcd4_Write_Char+0x2a>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <Lcd4_Write_Char+0x30>
 4b4:	00 00       	nop
 4b6:	60 e0       	ldi	r22, 0x00	; 0
 4b8:	70 e0       	ldi	r23, 0x00	; 0
 4ba:	84 e2       	ldi	r24, 0x24	; 36
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4c2:	8f e9       	ldi	r24, 0x9F	; 159
 4c4:	9f e0       	ldi	r25, 0x0F	; 15
 4c6:	01 97       	sbiw	r24, 0x01	; 1
 4c8:	f1 f7       	brne	.-4      	; 0x4c6 <Lcd4_Write_Char+0x42>
 4ca:	00 c0       	rjmp	.+0      	; 0x4cc <Lcd4_Write_Char+0x48>
 4cc:	00 00       	nop
 4ce:	8c 2f       	mov	r24, r28
 4d0:	8f 70       	andi	r24, 0x0F	; 15
 4d2:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4d6:	61 e0       	ldi	r22, 0x01	; 1
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	84 e2       	ldi	r24, 0x24	; 36
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4e2:	8f e9       	ldi	r24, 0x9F	; 159
 4e4:	9f e0       	ldi	r25, 0x0F	; 15
 4e6:	01 97       	sbiw	r24, 0x01	; 1
 4e8:	f1 f7       	brne	.-4      	; 0x4e6 <Lcd4_Write_Char+0x62>
 4ea:	00 c0       	rjmp	.+0      	; 0x4ec <Lcd4_Write_Char+0x68>
 4ec:	00 00       	nop
 4ee:	60 e0       	ldi	r22, 0x00	; 0
 4f0:	70 e0       	ldi	r23, 0x00	; 0
 4f2:	84 e2       	ldi	r24, 0x24	; 36
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4fa:	8f e9       	ldi	r24, 0x9F	; 159
 4fc:	9f e0       	ldi	r25, 0x0F	; 15
 4fe:	01 97       	sbiw	r24, 0x01	; 1
 500:	f1 f7       	brne	.-4      	; 0x4fe <Lcd4_Write_Char+0x7a>
 502:	00 c0       	rjmp	.+0      	; 0x504 <Lcd4_Write_Char+0x80>
 504:	00 00       	nop
 506:	cf 91       	pop	r28
 508:	08 95       	ret

0000050a <Lcd4_Write_String>:
 50a:	cf 93       	push	r28
 50c:	df 93       	push	r29
 50e:	ec 01       	movw	r28, r24
 510:	88 81       	ld	r24, Y
 512:	88 23       	and	r24, r24
 514:	31 f0       	breq	.+12     	; 0x522 <Lcd4_Write_String+0x18>
 516:	21 96       	adiw	r28, 0x01	; 1
 518:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
 51c:	89 91       	ld	r24, Y+
 51e:	81 11       	cpse	r24, r1
 520:	fb cf       	rjmp	.-10     	; 0x518 <Lcd4_Write_String+0xe>
 522:	df 91       	pop	r29
 524:	cf 91       	pop	r28
 526:	08 95       	ret

00000528 <Request>:
#define DHT11_LG PINC

uint8_t I_RH,D_RH,I_Temp,D_Temp,CheckSum;
void Request()				/* Microcontroller send start pulse/request */
{
	sbi(DHT11_DDR,DHT11_PIN);
 528:	a0 9a       	sbi	0x14, 0	; 20
	cbi(DHT11_PORT,DHT11_PIN);	/* set to low pin */
 52a:	a8 98       	cbi	0x15, 0	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 52c:	2f ef       	ldi	r18, 0xFF	; 255
 52e:	89 ef       	ldi	r24, 0xF9	; 249
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	21 50       	subi	r18, 0x01	; 1
 534:	80 40       	sbci	r24, 0x00	; 0
 536:	90 40       	sbci	r25, 0x00	; 0
 538:	e1 f7       	brne	.-8      	; 0x532 <Request+0xa>
 53a:	00 c0       	rjmp	.+0      	; 0x53c <Request+0x14>
 53c:	00 00       	nop
	_delay_ms(20);			/* wait for 20ms */
	sbi(DHT11_PORT,DHT11_PIN);	/* set to high pin */
 53e:	a8 9a       	sbi	0x15, 0	; 21
 540:	08 95       	ret

00000542 <Response>:
}
void Response()				/* receive response from DHT11 */
{
	cbi(DHT11_DDR,DHT11_PIN);
 542:	a0 98       	cbi	0x14, 0	; 20
	while(bit_is_set(DHT11_LG, DHT11_PIN));
 544:	98 99       	sbic	0x13, 0	; 19
 546:	fe cf       	rjmp	.-4      	; 0x544 <Response+0x2>
	while(bit_is_clear(DHT11_LG, DHT11_PIN));
 548:	98 9b       	sbis	0x13, 0	; 19
 54a:	fe cf       	rjmp	.-4      	; 0x548 <Response+0x6>
	while(bit_is_set(DHT11_LG, DHT11_PIN));
 54c:	98 99       	sbic	0x13, 0	; 19
 54e:	fe cf       	rjmp	.-4      	; 0x54c <Response+0xa>
}
 550:	08 95       	ret

00000552 <Receive_data>:
uint8_t Receive_data()			/* receive data */
{
 552:	28 e0       	ldi	r18, 0x08	; 8
 554:	30 e0       	ldi	r19, 0x00	; 0
	uint8_t c=0;
 556:	80 e0       	ldi	r24, 0x00	; 0
	for (int q=0; q<8; q++)
	{
		while(bit_is_clear(DHT11_LG, DHT11_PIN));  /* check received bit 0 or 1 */
 558:	98 9b       	sbis	0x13, 0	; 19
 55a:	fe cf       	rjmp	.-4      	; 0x558 <Receive_data+0x6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 55c:	90 ea       	ldi	r25, 0xA0	; 160
 55e:	9a 95       	dec	r25
 560:	f1 f7       	brne	.-4      	; 0x55e <Receive_data+0xc>
		_delay_us(30);
		if(bit_is_set(DHT11_LG, DHT11_PIN))/* if high pulse is greater than 30ms */
 562:	98 9b       	sbis	0x13, 0	; 19
 564:	03 c0       	rjmp	.+6      	; 0x56c <Receive_data+0x1a>
		c = (c<<1)|(0x01);	/* then its logic HIGH */
 566:	88 0f       	add	r24, r24
 568:	81 60       	ori	r24, 0x01	; 1
 56a:	01 c0       	rjmp	.+2      	; 0x56e <Receive_data+0x1c>
		else			/* otherwise its logic LOW */
		c = (c<<1);
 56c:	88 0f       	add	r24, r24
		while(bit_is_set(DHT11_LG, DHT11_PIN));
 56e:	98 99       	sbic	0x13, 0	; 19
 570:	fe cf       	rjmp	.-4      	; 0x56e <Receive_data+0x1c>
 572:	21 50       	subi	r18, 0x01	; 1
 574:	31 09       	sbc	r19, r1
	while(bit_is_set(DHT11_LG, DHT11_PIN));
}
uint8_t Receive_data()			/* receive data */
{
	uint8_t c=0;
	for (int q=0; q<8; q++)
 576:	81 f7       	brne	.-32     	; 0x558 <Receive_data+0x6>
		else			/* otherwise its logic LOW */
		c = (c<<1);
		while(bit_is_set(DHT11_LG, DHT11_PIN));
	}
	return c;
}
 578:	08 95       	ret

0000057a <main>:
int main(void)
{
 57a:	cf 93       	push	r28
 57c:	df 93       	push	r29
 57e:	00 d0       	rcall	.+0      	; 0x580 <main+0x6>
 580:	00 d0       	rcall	.+0      	; 0x582 <main+0x8>
 582:	1f 92       	push	r1
 584:	cd b7       	in	r28, 0x3d	; 61
 586:	de b7       	in	r29, 0x3e	; 62
	char data[5];
	uint8_t I_RH,D_RH,I_Temp,D_Temp,CheckSum;
	//
	DDRD = 0xFF;
 588:	8f ef       	ldi	r24, 0xFF	; 255
 58a:	81 bb       	out	0x11, r24	; 17
	sbi(DDRB, 0);
 58c:	b8 9a       	sbi	0x17, 0	; 23
    Lcd4_Init();
 58e:	0e 94 0b 02 	call	0x416	; 0x416 <Lcd4_Init>
	UART_init(9600);
 592:	60 e8       	ldi	r22, 0x80	; 128
 594:	75 e2       	ldi	r23, 0x25	; 37
 596:	80 e0       	ldi	r24, 0x00	; 0
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <UART_init>
	Lcd4_Write_String("Nhiet do: ");
 59e:	80 e6       	ldi	r24, 0x60	; 96
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 85 02 	call	0x50a	; 0x50a <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,0);
 5a6:	60 e0       	ldi	r22, 0x00	; 0
 5a8:	82 e0       	ldi	r24, 0x02	; 2
 5aa:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	Lcd4_Write_String("Do am: ");
 5ae:	8b e6       	ldi	r24, 0x6B	; 107
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 85 02 	call	0x50a	; 0x50a <Lcd4_Write_String>
	sei();
 5b6:	78 94       	sei
			Lcd4_Set_Cursor(1,0);
			Lcd4_Write_String("Error");
		}
		else
		{
			sprintf(data,"%d.%d", I_Temp, D_Temp);
 5b8:	0f 2e       	mov	r0, r31
 5ba:	f9 e7       	ldi	r31, 0x79	; 121
 5bc:	ef 2e       	mov	r14, r31
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	ff 2e       	mov	r15, r31
 5c2:	f0 2d       	mov	r31, r0
 5c4:	8e 01       	movw	r16, r28
 5c6:	0f 5f       	subi	r16, 0xFF	; 255
 5c8:	1f 4f       	sbci	r17, 0xFF	; 255
	Lcd4_Set_Cursor(2,0);
	Lcd4_Write_String("Do am: ");
	sei();
    while (1) 
    {
		Request();		/* send start pulse */
 5ca:	0e 94 94 02 	call	0x528	; 0x528 <Request>
		Response();		/* receive response */
 5ce:	0e 94 a1 02 	call	0x542	; 0x542 <Response>
		I_RH=Receive_data();	/* store first eight bit in I_RH */
 5d2:	0e 94 a9 02 	call	0x552	; 0x552 <Receive_data>
 5d6:	d8 2e       	mov	r13, r24
		D_RH=Receive_data();	/* store next eight bit in D_RH */
 5d8:	0e 94 a9 02 	call	0x552	; 0x552 <Receive_data>
 5dc:	c8 2e       	mov	r12, r24
		I_Temp=Receive_data();	/* store next eight bit in I_Temp */
 5de:	0e 94 a9 02 	call	0x552	; 0x552 <Receive_data>
 5e2:	b8 2e       	mov	r11, r24
		D_Temp=Receive_data();	/* store next eight bit in D_Temp */
 5e4:	0e 94 a9 02 	call	0x552	; 0x552 <Receive_data>
 5e8:	a8 2e       	mov	r10, r24
		CheckSum=Receive_data();/* store next eight bit in CheckSum */
 5ea:	0e 94 a9 02 	call	0x552	; 0x552 <Receive_data>
		if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)
 5ee:	2c 2d       	mov	r18, r12
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	2d 0d       	add	r18, r13
 5f4:	31 1d       	adc	r19, r1
 5f6:	2b 0d       	add	r18, r11
 5f8:	31 1d       	adc	r19, r1
 5fa:	2a 0d       	add	r18, r10
 5fc:	31 1d       	adc	r19, r1
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	28 17       	cp	r18, r24
 602:	39 07       	cpc	r19, r25
 604:	49 f0       	breq	.+18     	; 0x618 <main+0x9e>
		{
			Lcd4_Set_Cursor(1,0);
 606:	60 e0       	ldi	r22, 0x00	; 0
 608:	81 e0       	ldi	r24, 0x01	; 1
 60a:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
			Lcd4_Write_String("Error");
 60e:	83 e7       	ldi	r24, 0x73	; 115
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	0e 94 85 02 	call	0x50a	; 0x50a <Lcd4_Write_String>
 616:	d9 cf       	rjmp	.-78     	; 0x5ca <main+0x50>
		}
		else
		{
			sprintf(data,"%d.%d", I_Temp, D_Temp);
 618:	1f 92       	push	r1
 61a:	af 92       	push	r10
 61c:	1f 92       	push	r1
 61e:	bf 92       	push	r11
 620:	ff 92       	push	r15
 622:	ef 92       	push	r14
 624:	1f 93       	push	r17
 626:	0f 93       	push	r16
 628:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <sprintf>
			UART_SendString(data);
 62c:	c8 01       	movw	r24, r16
 62e:	0e 94 99 03 	call	0x732	; 0x732 <UART_SendString>
			sprintf(data,"%d.%d", I_RH, D_RH);
 632:	1f 92       	push	r1
 634:	cf 92       	push	r12
 636:	1f 92       	push	r1
 638:	df 92       	push	r13
 63a:	ff 92       	push	r15
 63c:	ef 92       	push	r14
 63e:	1f 93       	push	r17
 640:	0f 93       	push	r16
 642:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <sprintf>
			UART_SendString(data);
 646:	c8 01       	movw	r24, r16
 648:	0e 94 99 03 	call	0x732	; 0x732 <UART_SendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 64c:	2f ef       	ldi	r18, 0xFF	; 255
 64e:	83 ed       	ldi	r24, 0xD3	; 211
 650:	90 e3       	ldi	r25, 0x30	; 48
 652:	21 50       	subi	r18, 0x01	; 1
 654:	80 40       	sbci	r24, 0x00	; 0
 656:	90 40       	sbci	r25, 0x00	; 0
 658:	e1 f7       	brne	.-8      	; 0x652 <main+0xd8>
 65a:	00 c0       	rjmp	.+0      	; 0x65c <main+0xe2>
 65c:	00 00       	nop
 65e:	0f b6       	in	r0, 0x3f	; 63
 660:	f8 94       	cli
 662:	de bf       	out	0x3e, r29	; 62
 664:	0f be       	out	0x3f, r0	; 63
 666:	cd bf       	out	0x3d, r28	; 61
 668:	b0 cf       	rjmp	.-160    	; 0x5ca <main+0x50>

0000066a <__vector_11>:
		}
		
    }
}
ISR (USART_RXC_vect)
{
 66a:	1f 92       	push	r1
 66c:	0f 92       	push	r0
 66e:	0f b6       	in	r0, 0x3f	; 63
 670:	0f 92       	push	r0
 672:	11 24       	eor	r1, r1
 674:	2f 93       	push	r18
 676:	3f 93       	push	r19
 678:	4f 93       	push	r20
 67a:	5f 93       	push	r21
 67c:	6f 93       	push	r22
 67e:	7f 93       	push	r23
 680:	8f 93       	push	r24
 682:	9f 93       	push	r25
 684:	af 93       	push	r26
 686:	bf 93       	push	r27
 688:	ef 93       	push	r30
 68a:	ff 93       	push	r31
	static unsigned char u;
	u = UART_RxChar();
 68c:	0e 94 91 03 	call	0x722	; 0x722 <UART_RxChar>
 690:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end>
	if(u == '1')
 694:	81 33       	cpi	r24, 0x31	; 49
 696:	09 f4       	brne	.+2      	; 0x69a <__vector_11+0x30>
	{
		sbi(PORTB, 0);
 698:	c0 9a       	sbi	0x18, 0	; 24
	}
	if(u == '0')
 69a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__data_end>
 69e:	80 33       	cpi	r24, 0x30	; 48
 6a0:	09 f4       	brne	.+2      	; 0x6a4 <__vector_11+0x3a>
	{
		cbi(PORTB, 0);
 6a2:	c0 98       	cbi	0x18, 0	; 24
	}
}
 6a4:	ff 91       	pop	r31
 6a6:	ef 91       	pop	r30
 6a8:	bf 91       	pop	r27
 6aa:	af 91       	pop	r26
 6ac:	9f 91       	pop	r25
 6ae:	8f 91       	pop	r24
 6b0:	7f 91       	pop	r23
 6b2:	6f 91       	pop	r22
 6b4:	5f 91       	pop	r21
 6b6:	4f 91       	pop	r20
 6b8:	3f 91       	pop	r19
 6ba:	2f 91       	pop	r18
 6bc:	0f 90       	pop	r0
 6be:	0f be       	out	0x3f, r0	; 63
 6c0:	0f 90       	pop	r0
 6c2:	1f 90       	pop	r1
 6c4:	18 95       	reti

000006c6 <UART_init>:

void UART_Read_Text(char *Output, unsigned int length)
{
	for(int i=0;i<length;i++)
	Output[i] = UART_RxChar();
}
 6c6:	2a b1       	in	r18, 0x0a	; 10
 6c8:	28 69       	ori	r18, 0x98	; 152
 6ca:	2a b9       	out	0x0a, r18	; 10
 6cc:	20 b5       	in	r18, 0x20	; 32
 6ce:	26 68       	ori	r18, 0x86	; 134
 6d0:	20 bd       	out	0x20, r18	; 32
 6d2:	dc 01       	movw	r26, r24
 6d4:	cb 01       	movw	r24, r22
 6d6:	88 0f       	add	r24, r24
 6d8:	99 1f       	adc	r25, r25
 6da:	aa 1f       	adc	r26, r26
 6dc:	bb 1f       	adc	r27, r27
 6de:	88 0f       	add	r24, r24
 6e0:	99 1f       	adc	r25, r25
 6e2:	aa 1f       	adc	r26, r26
 6e4:	bb 1f       	adc	r27, r27
 6e6:	9c 01       	movw	r18, r24
 6e8:	ad 01       	movw	r20, r26
 6ea:	22 0f       	add	r18, r18
 6ec:	33 1f       	adc	r19, r19
 6ee:	44 1f       	adc	r20, r20
 6f0:	55 1f       	adc	r21, r21
 6f2:	22 0f       	add	r18, r18
 6f4:	33 1f       	adc	r19, r19
 6f6:	44 1f       	adc	r20, r20
 6f8:	55 1f       	adc	r21, r21
 6fa:	60 e0       	ldi	r22, 0x00	; 0
 6fc:	74 e2       	ldi	r23, 0x24	; 36
 6fe:	84 ef       	ldi	r24, 0xF4	; 244
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	0e 94 af 03 	call	0x75e	; 0x75e <__udivmodsi4>
 706:	8f ef       	ldi	r24, 0xFF	; 255
 708:	82 0f       	add	r24, r18
 70a:	89 b9       	out	0x09, r24	; 9
 70c:	da 01       	movw	r26, r20
 70e:	c9 01       	movw	r24, r18
 710:	01 97       	sbiw	r24, 0x01	; 1
 712:	a1 09       	sbc	r26, r1
 714:	b1 09       	sbc	r27, r1
 716:	89 2f       	mov	r24, r25
 718:	9a 2f       	mov	r25, r26
 71a:	ab 2f       	mov	r26, r27
 71c:	bb 27       	eor	r27, r27
 71e:	80 bd       	out	0x20, r24	; 32
 720:	08 95       	ret

00000722 <UART_RxChar>:
 722:	5f 9b       	sbis	0x0b, 7	; 11
 724:	fe cf       	rjmp	.-4      	; 0x722 <UART_RxChar>
 726:	8c b1       	in	r24, 0x0c	; 12
 728:	08 95       	ret

0000072a <UART_TxChar>:

void UART_TxChar(char ch)
{
	while (! (UCSRA & (1<<UDRE)));	/* Wait for empty transmit buffer*/
 72a:	5d 9b       	sbis	0x0b, 5	; 11
 72c:	fe cf       	rjmp	.-4      	; 0x72a <UART_TxChar>
	UDR = ch ;
 72e:	8c b9       	out	0x0c, r24	; 12
 730:	08 95       	ret

00000732 <UART_SendString>:
}

void UART_SendString(char *str)
{
 732:	0f 93       	push	r16
 734:	1f 93       	push	r17
 736:	cf 93       	push	r28
 738:	fc 01       	movw	r30, r24
	unsigned char j=0;
	
	while (str[j]!=0)		/* Send string till null */
 73a:	80 81       	ld	r24, Z
 73c:	88 23       	and	r24, r24
 73e:	59 f0       	breq	.+22     	; 0x756 <UART_SendString+0x24>
 740:	8f 01       	movw	r16, r30
 742:	c0 e0       	ldi	r28, 0x00	; 0
	{
		UART_TxChar(str[j]);
 744:	0e 94 95 03 	call	0x72a	; 0x72a <UART_TxChar>
		j++;
 748:	cf 5f       	subi	r28, 0xFF	; 255

void UART_SendString(char *str)
{
	unsigned char j=0;
	
	while (str[j]!=0)		/* Send string till null */
 74a:	f8 01       	movw	r30, r16
 74c:	ec 0f       	add	r30, r28
 74e:	f1 1d       	adc	r31, r1
 750:	80 81       	ld	r24, Z
 752:	81 11       	cpse	r24, r1
 754:	f7 cf       	rjmp	.-18     	; 0x744 <UART_SendString+0x12>
	{
		UART_TxChar(str[j]);
		j++;
	}
 756:	cf 91       	pop	r28
 758:	1f 91       	pop	r17
 75a:	0f 91       	pop	r16
 75c:	08 95       	ret

0000075e <__udivmodsi4>:
 75e:	a1 e2       	ldi	r26, 0x21	; 33
 760:	1a 2e       	mov	r1, r26
 762:	aa 1b       	sub	r26, r26
 764:	bb 1b       	sub	r27, r27
 766:	fd 01       	movw	r30, r26
 768:	0d c0       	rjmp	.+26     	; 0x784 <__udivmodsi4_ep>

0000076a <__udivmodsi4_loop>:
 76a:	aa 1f       	adc	r26, r26
 76c:	bb 1f       	adc	r27, r27
 76e:	ee 1f       	adc	r30, r30
 770:	ff 1f       	adc	r31, r31
 772:	a2 17       	cp	r26, r18
 774:	b3 07       	cpc	r27, r19
 776:	e4 07       	cpc	r30, r20
 778:	f5 07       	cpc	r31, r21
 77a:	20 f0       	brcs	.+8      	; 0x784 <__udivmodsi4_ep>
 77c:	a2 1b       	sub	r26, r18
 77e:	b3 0b       	sbc	r27, r19
 780:	e4 0b       	sbc	r30, r20
 782:	f5 0b       	sbc	r31, r21

00000784 <__udivmodsi4_ep>:
 784:	66 1f       	adc	r22, r22
 786:	77 1f       	adc	r23, r23
 788:	88 1f       	adc	r24, r24
 78a:	99 1f       	adc	r25, r25
 78c:	1a 94       	dec	r1
 78e:	69 f7       	brne	.-38     	; 0x76a <__udivmodsi4_loop>
 790:	60 95       	com	r22
 792:	70 95       	com	r23
 794:	80 95       	com	r24
 796:	90 95       	com	r25
 798:	9b 01       	movw	r18, r22
 79a:	ac 01       	movw	r20, r24
 79c:	bd 01       	movw	r22, r26
 79e:	cf 01       	movw	r24, r30
 7a0:	08 95       	ret

000007a2 <sprintf>:
 7a2:	ae e0       	ldi	r26, 0x0E	; 14
 7a4:	b0 e0       	ldi	r27, 0x00	; 0
 7a6:	e7 ed       	ldi	r30, 0xD7	; 215
 7a8:	f3 e0       	ldi	r31, 0x03	; 3
 7aa:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__prologue_saves__+0x1c>
 7ae:	0d 89       	ldd	r16, Y+21	; 0x15
 7b0:	1e 89       	ldd	r17, Y+22	; 0x16
 7b2:	86 e0       	ldi	r24, 0x06	; 6
 7b4:	8c 83       	std	Y+4, r24	; 0x04
 7b6:	1a 83       	std	Y+2, r17	; 0x02
 7b8:	09 83       	std	Y+1, r16	; 0x01
 7ba:	8f ef       	ldi	r24, 0xFF	; 255
 7bc:	9f e7       	ldi	r25, 0x7F	; 127
 7be:	9e 83       	std	Y+6, r25	; 0x06
 7c0:	8d 83       	std	Y+5, r24	; 0x05
 7c2:	ae 01       	movw	r20, r28
 7c4:	47 5e       	subi	r20, 0xE7	; 231
 7c6:	5f 4f       	sbci	r21, 0xFF	; 255
 7c8:	6f 89       	ldd	r22, Y+23	; 0x17
 7ca:	78 8d       	ldd	r23, Y+24	; 0x18
 7cc:	ce 01       	movw	r24, r28
 7ce:	01 96       	adiw	r24, 0x01	; 1
 7d0:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <vfprintf>
 7d4:	ef 81       	ldd	r30, Y+7	; 0x07
 7d6:	f8 85       	ldd	r31, Y+8	; 0x08
 7d8:	e0 0f       	add	r30, r16
 7da:	f1 1f       	adc	r31, r17
 7dc:	10 82       	st	Z, r1
 7de:	2e 96       	adiw	r28, 0x0e	; 14
 7e0:	e4 e0       	ldi	r30, 0x04	; 4
 7e2:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__epilogue_restores__+0x1c>

000007e6 <vfprintf>:
 7e6:	ab e0       	ldi	r26, 0x0B	; 11
 7e8:	b0 e0       	ldi	r27, 0x00	; 0
 7ea:	e9 ef       	ldi	r30, 0xF9	; 249
 7ec:	f3 e0       	ldi	r31, 0x03	; 3
 7ee:	0c 94 84 06 	jmp	0xd08	; 0xd08 <__prologue_saves__>
 7f2:	6c 01       	movw	r12, r24
 7f4:	7b 01       	movw	r14, r22
 7f6:	8a 01       	movw	r16, r20
 7f8:	fc 01       	movw	r30, r24
 7fa:	17 82       	std	Z+7, r1	; 0x07
 7fc:	16 82       	std	Z+6, r1	; 0x06
 7fe:	83 81       	ldd	r24, Z+3	; 0x03
 800:	81 ff       	sbrs	r24, 1
 802:	cc c1       	rjmp	.+920    	; 0xb9c <vfprintf+0x3b6>
 804:	ce 01       	movw	r24, r28
 806:	01 96       	adiw	r24, 0x01	; 1
 808:	3c 01       	movw	r6, r24
 80a:	f6 01       	movw	r30, r12
 80c:	93 81       	ldd	r25, Z+3	; 0x03
 80e:	f7 01       	movw	r30, r14
 810:	93 fd       	sbrc	r25, 3
 812:	85 91       	lpm	r24, Z+
 814:	93 ff       	sbrs	r25, 3
 816:	81 91       	ld	r24, Z+
 818:	7f 01       	movw	r14, r30
 81a:	88 23       	and	r24, r24
 81c:	09 f4       	brne	.+2      	; 0x820 <vfprintf+0x3a>
 81e:	ba c1       	rjmp	.+884    	; 0xb94 <vfprintf+0x3ae>
 820:	85 32       	cpi	r24, 0x25	; 37
 822:	39 f4       	brne	.+14     	; 0x832 <vfprintf+0x4c>
 824:	93 fd       	sbrc	r25, 3
 826:	85 91       	lpm	r24, Z+
 828:	93 ff       	sbrs	r25, 3
 82a:	81 91       	ld	r24, Z+
 82c:	7f 01       	movw	r14, r30
 82e:	85 32       	cpi	r24, 0x25	; 37
 830:	29 f4       	brne	.+10     	; 0x83c <vfprintf+0x56>
 832:	b6 01       	movw	r22, r12
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 83a:	e7 cf       	rjmp	.-50     	; 0x80a <vfprintf+0x24>
 83c:	91 2c       	mov	r9, r1
 83e:	21 2c       	mov	r2, r1
 840:	31 2c       	mov	r3, r1
 842:	ff e1       	ldi	r31, 0x1F	; 31
 844:	f3 15       	cp	r31, r3
 846:	d8 f0       	brcs	.+54     	; 0x87e <vfprintf+0x98>
 848:	8b 32       	cpi	r24, 0x2B	; 43
 84a:	79 f0       	breq	.+30     	; 0x86a <vfprintf+0x84>
 84c:	38 f4       	brcc	.+14     	; 0x85c <vfprintf+0x76>
 84e:	80 32       	cpi	r24, 0x20	; 32
 850:	79 f0       	breq	.+30     	; 0x870 <vfprintf+0x8a>
 852:	83 32       	cpi	r24, 0x23	; 35
 854:	a1 f4       	brne	.+40     	; 0x87e <vfprintf+0x98>
 856:	23 2d       	mov	r18, r3
 858:	20 61       	ori	r18, 0x10	; 16
 85a:	1d c0       	rjmp	.+58     	; 0x896 <vfprintf+0xb0>
 85c:	8d 32       	cpi	r24, 0x2D	; 45
 85e:	61 f0       	breq	.+24     	; 0x878 <vfprintf+0x92>
 860:	80 33       	cpi	r24, 0x30	; 48
 862:	69 f4       	brne	.+26     	; 0x87e <vfprintf+0x98>
 864:	23 2d       	mov	r18, r3
 866:	21 60       	ori	r18, 0x01	; 1
 868:	16 c0       	rjmp	.+44     	; 0x896 <vfprintf+0xb0>
 86a:	83 2d       	mov	r24, r3
 86c:	82 60       	ori	r24, 0x02	; 2
 86e:	38 2e       	mov	r3, r24
 870:	e3 2d       	mov	r30, r3
 872:	e4 60       	ori	r30, 0x04	; 4
 874:	3e 2e       	mov	r3, r30
 876:	2a c0       	rjmp	.+84     	; 0x8cc <vfprintf+0xe6>
 878:	f3 2d       	mov	r31, r3
 87a:	f8 60       	ori	r31, 0x08	; 8
 87c:	1d c0       	rjmp	.+58     	; 0x8b8 <vfprintf+0xd2>
 87e:	37 fc       	sbrc	r3, 7
 880:	2d c0       	rjmp	.+90     	; 0x8dc <vfprintf+0xf6>
 882:	20 ed       	ldi	r18, 0xD0	; 208
 884:	28 0f       	add	r18, r24
 886:	2a 30       	cpi	r18, 0x0A	; 10
 888:	40 f0       	brcs	.+16     	; 0x89a <vfprintf+0xb4>
 88a:	8e 32       	cpi	r24, 0x2E	; 46
 88c:	b9 f4       	brne	.+46     	; 0x8bc <vfprintf+0xd6>
 88e:	36 fc       	sbrc	r3, 6
 890:	81 c1       	rjmp	.+770    	; 0xb94 <vfprintf+0x3ae>
 892:	23 2d       	mov	r18, r3
 894:	20 64       	ori	r18, 0x40	; 64
 896:	32 2e       	mov	r3, r18
 898:	19 c0       	rjmp	.+50     	; 0x8cc <vfprintf+0xe6>
 89a:	36 fe       	sbrs	r3, 6
 89c:	06 c0       	rjmp	.+12     	; 0x8aa <vfprintf+0xc4>
 89e:	8a e0       	ldi	r24, 0x0A	; 10
 8a0:	98 9e       	mul	r9, r24
 8a2:	20 0d       	add	r18, r0
 8a4:	11 24       	eor	r1, r1
 8a6:	92 2e       	mov	r9, r18
 8a8:	11 c0       	rjmp	.+34     	; 0x8cc <vfprintf+0xe6>
 8aa:	ea e0       	ldi	r30, 0x0A	; 10
 8ac:	2e 9e       	mul	r2, r30
 8ae:	20 0d       	add	r18, r0
 8b0:	11 24       	eor	r1, r1
 8b2:	22 2e       	mov	r2, r18
 8b4:	f3 2d       	mov	r31, r3
 8b6:	f0 62       	ori	r31, 0x20	; 32
 8b8:	3f 2e       	mov	r3, r31
 8ba:	08 c0       	rjmp	.+16     	; 0x8cc <vfprintf+0xe6>
 8bc:	8c 36       	cpi	r24, 0x6C	; 108
 8be:	21 f4       	brne	.+8      	; 0x8c8 <vfprintf+0xe2>
 8c0:	83 2d       	mov	r24, r3
 8c2:	80 68       	ori	r24, 0x80	; 128
 8c4:	38 2e       	mov	r3, r24
 8c6:	02 c0       	rjmp	.+4      	; 0x8cc <vfprintf+0xe6>
 8c8:	88 36       	cpi	r24, 0x68	; 104
 8ca:	41 f4       	brne	.+16     	; 0x8dc <vfprintf+0xf6>
 8cc:	f7 01       	movw	r30, r14
 8ce:	93 fd       	sbrc	r25, 3
 8d0:	85 91       	lpm	r24, Z+
 8d2:	93 ff       	sbrs	r25, 3
 8d4:	81 91       	ld	r24, Z+
 8d6:	7f 01       	movw	r14, r30
 8d8:	81 11       	cpse	r24, r1
 8da:	b3 cf       	rjmp	.-154    	; 0x842 <vfprintf+0x5c>
 8dc:	98 2f       	mov	r25, r24
 8de:	9f 7d       	andi	r25, 0xDF	; 223
 8e0:	95 54       	subi	r25, 0x45	; 69
 8e2:	93 30       	cpi	r25, 0x03	; 3
 8e4:	28 f4       	brcc	.+10     	; 0x8f0 <vfprintf+0x10a>
 8e6:	0c 5f       	subi	r16, 0xFC	; 252
 8e8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ea:	9f e3       	ldi	r25, 0x3F	; 63
 8ec:	99 83       	std	Y+1, r25	; 0x01
 8ee:	0d c0       	rjmp	.+26     	; 0x90a <vfprintf+0x124>
 8f0:	83 36       	cpi	r24, 0x63	; 99
 8f2:	31 f0       	breq	.+12     	; 0x900 <vfprintf+0x11a>
 8f4:	83 37       	cpi	r24, 0x73	; 115
 8f6:	71 f0       	breq	.+28     	; 0x914 <vfprintf+0x12e>
 8f8:	83 35       	cpi	r24, 0x53	; 83
 8fa:	09 f0       	breq	.+2      	; 0x8fe <vfprintf+0x118>
 8fc:	59 c0       	rjmp	.+178    	; 0x9b0 <vfprintf+0x1ca>
 8fe:	21 c0       	rjmp	.+66     	; 0x942 <vfprintf+0x15c>
 900:	f8 01       	movw	r30, r16
 902:	80 81       	ld	r24, Z
 904:	89 83       	std	Y+1, r24	; 0x01
 906:	0e 5f       	subi	r16, 0xFE	; 254
 908:	1f 4f       	sbci	r17, 0xFF	; 255
 90a:	88 24       	eor	r8, r8
 90c:	83 94       	inc	r8
 90e:	91 2c       	mov	r9, r1
 910:	53 01       	movw	r10, r6
 912:	13 c0       	rjmp	.+38     	; 0x93a <vfprintf+0x154>
 914:	28 01       	movw	r4, r16
 916:	f2 e0       	ldi	r31, 0x02	; 2
 918:	4f 0e       	add	r4, r31
 91a:	51 1c       	adc	r5, r1
 91c:	f8 01       	movw	r30, r16
 91e:	a0 80       	ld	r10, Z
 920:	b1 80       	ldd	r11, Z+1	; 0x01
 922:	36 fe       	sbrs	r3, 6
 924:	03 c0       	rjmp	.+6      	; 0x92c <vfprintf+0x146>
 926:	69 2d       	mov	r22, r9
 928:	70 e0       	ldi	r23, 0x00	; 0
 92a:	02 c0       	rjmp	.+4      	; 0x930 <vfprintf+0x14a>
 92c:	6f ef       	ldi	r22, 0xFF	; 255
 92e:	7f ef       	ldi	r23, 0xFF	; 255
 930:	c5 01       	movw	r24, r10
 932:	0e 94 df 05 	call	0xbbe	; 0xbbe <strnlen>
 936:	4c 01       	movw	r8, r24
 938:	82 01       	movw	r16, r4
 93a:	f3 2d       	mov	r31, r3
 93c:	ff 77       	andi	r31, 0x7F	; 127
 93e:	3f 2e       	mov	r3, r31
 940:	16 c0       	rjmp	.+44     	; 0x96e <vfprintf+0x188>
 942:	28 01       	movw	r4, r16
 944:	22 e0       	ldi	r18, 0x02	; 2
 946:	42 0e       	add	r4, r18
 948:	51 1c       	adc	r5, r1
 94a:	f8 01       	movw	r30, r16
 94c:	a0 80       	ld	r10, Z
 94e:	b1 80       	ldd	r11, Z+1	; 0x01
 950:	36 fe       	sbrs	r3, 6
 952:	03 c0       	rjmp	.+6      	; 0x95a <vfprintf+0x174>
 954:	69 2d       	mov	r22, r9
 956:	70 e0       	ldi	r23, 0x00	; 0
 958:	02 c0       	rjmp	.+4      	; 0x95e <vfprintf+0x178>
 95a:	6f ef       	ldi	r22, 0xFF	; 255
 95c:	7f ef       	ldi	r23, 0xFF	; 255
 95e:	c5 01       	movw	r24, r10
 960:	0e 94 d4 05 	call	0xba8	; 0xba8 <strnlen_P>
 964:	4c 01       	movw	r8, r24
 966:	f3 2d       	mov	r31, r3
 968:	f0 68       	ori	r31, 0x80	; 128
 96a:	3f 2e       	mov	r3, r31
 96c:	82 01       	movw	r16, r4
 96e:	33 fc       	sbrc	r3, 3
 970:	1b c0       	rjmp	.+54     	; 0x9a8 <vfprintf+0x1c2>
 972:	82 2d       	mov	r24, r2
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	88 16       	cp	r8, r24
 978:	99 06       	cpc	r9, r25
 97a:	b0 f4       	brcc	.+44     	; 0x9a8 <vfprintf+0x1c2>
 97c:	b6 01       	movw	r22, r12
 97e:	80 e2       	ldi	r24, 0x20	; 32
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 986:	2a 94       	dec	r2
 988:	f4 cf       	rjmp	.-24     	; 0x972 <vfprintf+0x18c>
 98a:	f5 01       	movw	r30, r10
 98c:	37 fc       	sbrc	r3, 7
 98e:	85 91       	lpm	r24, Z+
 990:	37 fe       	sbrs	r3, 7
 992:	81 91       	ld	r24, Z+
 994:	5f 01       	movw	r10, r30
 996:	b6 01       	movw	r22, r12
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 99e:	21 10       	cpse	r2, r1
 9a0:	2a 94       	dec	r2
 9a2:	21 e0       	ldi	r18, 0x01	; 1
 9a4:	82 1a       	sub	r8, r18
 9a6:	91 08       	sbc	r9, r1
 9a8:	81 14       	cp	r8, r1
 9aa:	91 04       	cpc	r9, r1
 9ac:	71 f7       	brne	.-36     	; 0x98a <vfprintf+0x1a4>
 9ae:	e8 c0       	rjmp	.+464    	; 0xb80 <vfprintf+0x39a>
 9b0:	84 36       	cpi	r24, 0x64	; 100
 9b2:	11 f0       	breq	.+4      	; 0x9b8 <vfprintf+0x1d2>
 9b4:	89 36       	cpi	r24, 0x69	; 105
 9b6:	41 f5       	brne	.+80     	; 0xa08 <vfprintf+0x222>
 9b8:	f8 01       	movw	r30, r16
 9ba:	37 fe       	sbrs	r3, 7
 9bc:	07 c0       	rjmp	.+14     	; 0x9cc <vfprintf+0x1e6>
 9be:	60 81       	ld	r22, Z
 9c0:	71 81       	ldd	r23, Z+1	; 0x01
 9c2:	82 81       	ldd	r24, Z+2	; 0x02
 9c4:	93 81       	ldd	r25, Z+3	; 0x03
 9c6:	0c 5f       	subi	r16, 0xFC	; 252
 9c8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ca:	08 c0       	rjmp	.+16     	; 0x9dc <vfprintf+0x1f6>
 9cc:	60 81       	ld	r22, Z
 9ce:	71 81       	ldd	r23, Z+1	; 0x01
 9d0:	07 2e       	mov	r0, r23
 9d2:	00 0c       	add	r0, r0
 9d4:	88 0b       	sbc	r24, r24
 9d6:	99 0b       	sbc	r25, r25
 9d8:	0e 5f       	subi	r16, 0xFE	; 254
 9da:	1f 4f       	sbci	r17, 0xFF	; 255
 9dc:	f3 2d       	mov	r31, r3
 9de:	ff 76       	andi	r31, 0x6F	; 111
 9e0:	3f 2e       	mov	r3, r31
 9e2:	97 ff       	sbrs	r25, 7
 9e4:	09 c0       	rjmp	.+18     	; 0x9f8 <vfprintf+0x212>
 9e6:	90 95       	com	r25
 9e8:	80 95       	com	r24
 9ea:	70 95       	com	r23
 9ec:	61 95       	neg	r22
 9ee:	7f 4f       	sbci	r23, 0xFF	; 255
 9f0:	8f 4f       	sbci	r24, 0xFF	; 255
 9f2:	9f 4f       	sbci	r25, 0xFF	; 255
 9f4:	f0 68       	ori	r31, 0x80	; 128
 9f6:	3f 2e       	mov	r3, r31
 9f8:	2a e0       	ldi	r18, 0x0A	; 10
 9fa:	30 e0       	ldi	r19, 0x00	; 0
 9fc:	a3 01       	movw	r20, r6
 9fe:	0e 94 26 06 	call	0xc4c	; 0xc4c <__ultoa_invert>
 a02:	88 2e       	mov	r8, r24
 a04:	86 18       	sub	r8, r6
 a06:	45 c0       	rjmp	.+138    	; 0xa92 <vfprintf+0x2ac>
 a08:	85 37       	cpi	r24, 0x75	; 117
 a0a:	31 f4       	brne	.+12     	; 0xa18 <vfprintf+0x232>
 a0c:	23 2d       	mov	r18, r3
 a0e:	2f 7e       	andi	r18, 0xEF	; 239
 a10:	b2 2e       	mov	r11, r18
 a12:	2a e0       	ldi	r18, 0x0A	; 10
 a14:	30 e0       	ldi	r19, 0x00	; 0
 a16:	25 c0       	rjmp	.+74     	; 0xa62 <vfprintf+0x27c>
 a18:	93 2d       	mov	r25, r3
 a1a:	99 7f       	andi	r25, 0xF9	; 249
 a1c:	b9 2e       	mov	r11, r25
 a1e:	8f 36       	cpi	r24, 0x6F	; 111
 a20:	c1 f0       	breq	.+48     	; 0xa52 <vfprintf+0x26c>
 a22:	18 f4       	brcc	.+6      	; 0xa2a <vfprintf+0x244>
 a24:	88 35       	cpi	r24, 0x58	; 88
 a26:	79 f0       	breq	.+30     	; 0xa46 <vfprintf+0x260>
 a28:	b5 c0       	rjmp	.+362    	; 0xb94 <vfprintf+0x3ae>
 a2a:	80 37       	cpi	r24, 0x70	; 112
 a2c:	19 f0       	breq	.+6      	; 0xa34 <vfprintf+0x24e>
 a2e:	88 37       	cpi	r24, 0x78	; 120
 a30:	21 f0       	breq	.+8      	; 0xa3a <vfprintf+0x254>
 a32:	b0 c0       	rjmp	.+352    	; 0xb94 <vfprintf+0x3ae>
 a34:	e9 2f       	mov	r30, r25
 a36:	e0 61       	ori	r30, 0x10	; 16
 a38:	be 2e       	mov	r11, r30
 a3a:	b4 fe       	sbrs	r11, 4
 a3c:	0d c0       	rjmp	.+26     	; 0xa58 <vfprintf+0x272>
 a3e:	fb 2d       	mov	r31, r11
 a40:	f4 60       	ori	r31, 0x04	; 4
 a42:	bf 2e       	mov	r11, r31
 a44:	09 c0       	rjmp	.+18     	; 0xa58 <vfprintf+0x272>
 a46:	34 fe       	sbrs	r3, 4
 a48:	0a c0       	rjmp	.+20     	; 0xa5e <vfprintf+0x278>
 a4a:	29 2f       	mov	r18, r25
 a4c:	26 60       	ori	r18, 0x06	; 6
 a4e:	b2 2e       	mov	r11, r18
 a50:	06 c0       	rjmp	.+12     	; 0xa5e <vfprintf+0x278>
 a52:	28 e0       	ldi	r18, 0x08	; 8
 a54:	30 e0       	ldi	r19, 0x00	; 0
 a56:	05 c0       	rjmp	.+10     	; 0xa62 <vfprintf+0x27c>
 a58:	20 e1       	ldi	r18, 0x10	; 16
 a5a:	30 e0       	ldi	r19, 0x00	; 0
 a5c:	02 c0       	rjmp	.+4      	; 0xa62 <vfprintf+0x27c>
 a5e:	20 e1       	ldi	r18, 0x10	; 16
 a60:	32 e0       	ldi	r19, 0x02	; 2
 a62:	f8 01       	movw	r30, r16
 a64:	b7 fe       	sbrs	r11, 7
 a66:	07 c0       	rjmp	.+14     	; 0xa76 <vfprintf+0x290>
 a68:	60 81       	ld	r22, Z
 a6a:	71 81       	ldd	r23, Z+1	; 0x01
 a6c:	82 81       	ldd	r24, Z+2	; 0x02
 a6e:	93 81       	ldd	r25, Z+3	; 0x03
 a70:	0c 5f       	subi	r16, 0xFC	; 252
 a72:	1f 4f       	sbci	r17, 0xFF	; 255
 a74:	06 c0       	rjmp	.+12     	; 0xa82 <vfprintf+0x29c>
 a76:	60 81       	ld	r22, Z
 a78:	71 81       	ldd	r23, Z+1	; 0x01
 a7a:	80 e0       	ldi	r24, 0x00	; 0
 a7c:	90 e0       	ldi	r25, 0x00	; 0
 a7e:	0e 5f       	subi	r16, 0xFE	; 254
 a80:	1f 4f       	sbci	r17, 0xFF	; 255
 a82:	a3 01       	movw	r20, r6
 a84:	0e 94 26 06 	call	0xc4c	; 0xc4c <__ultoa_invert>
 a88:	88 2e       	mov	r8, r24
 a8a:	86 18       	sub	r8, r6
 a8c:	fb 2d       	mov	r31, r11
 a8e:	ff 77       	andi	r31, 0x7F	; 127
 a90:	3f 2e       	mov	r3, r31
 a92:	36 fe       	sbrs	r3, 6
 a94:	0d c0       	rjmp	.+26     	; 0xab0 <vfprintf+0x2ca>
 a96:	23 2d       	mov	r18, r3
 a98:	2e 7f       	andi	r18, 0xFE	; 254
 a9a:	a2 2e       	mov	r10, r18
 a9c:	89 14       	cp	r8, r9
 a9e:	58 f4       	brcc	.+22     	; 0xab6 <vfprintf+0x2d0>
 aa0:	34 fe       	sbrs	r3, 4
 aa2:	0b c0       	rjmp	.+22     	; 0xaba <vfprintf+0x2d4>
 aa4:	32 fc       	sbrc	r3, 2
 aa6:	09 c0       	rjmp	.+18     	; 0xaba <vfprintf+0x2d4>
 aa8:	83 2d       	mov	r24, r3
 aaa:	8e 7e       	andi	r24, 0xEE	; 238
 aac:	a8 2e       	mov	r10, r24
 aae:	05 c0       	rjmp	.+10     	; 0xaba <vfprintf+0x2d4>
 ab0:	b8 2c       	mov	r11, r8
 ab2:	a3 2c       	mov	r10, r3
 ab4:	03 c0       	rjmp	.+6      	; 0xabc <vfprintf+0x2d6>
 ab6:	b8 2c       	mov	r11, r8
 ab8:	01 c0       	rjmp	.+2      	; 0xabc <vfprintf+0x2d6>
 aba:	b9 2c       	mov	r11, r9
 abc:	a4 fe       	sbrs	r10, 4
 abe:	0f c0       	rjmp	.+30     	; 0xade <vfprintf+0x2f8>
 ac0:	fe 01       	movw	r30, r28
 ac2:	e8 0d       	add	r30, r8
 ac4:	f1 1d       	adc	r31, r1
 ac6:	80 81       	ld	r24, Z
 ac8:	80 33       	cpi	r24, 0x30	; 48
 aca:	21 f4       	brne	.+8      	; 0xad4 <vfprintf+0x2ee>
 acc:	9a 2d       	mov	r25, r10
 ace:	99 7e       	andi	r25, 0xE9	; 233
 ad0:	a9 2e       	mov	r10, r25
 ad2:	09 c0       	rjmp	.+18     	; 0xae6 <vfprintf+0x300>
 ad4:	a2 fe       	sbrs	r10, 2
 ad6:	06 c0       	rjmp	.+12     	; 0xae4 <vfprintf+0x2fe>
 ad8:	b3 94       	inc	r11
 ada:	b3 94       	inc	r11
 adc:	04 c0       	rjmp	.+8      	; 0xae6 <vfprintf+0x300>
 ade:	8a 2d       	mov	r24, r10
 ae0:	86 78       	andi	r24, 0x86	; 134
 ae2:	09 f0       	breq	.+2      	; 0xae6 <vfprintf+0x300>
 ae4:	b3 94       	inc	r11
 ae6:	a3 fc       	sbrc	r10, 3
 ae8:	11 c0       	rjmp	.+34     	; 0xb0c <vfprintf+0x326>
 aea:	a0 fe       	sbrs	r10, 0
 aec:	06 c0       	rjmp	.+12     	; 0xafa <vfprintf+0x314>
 aee:	b2 14       	cp	r11, r2
 af0:	88 f4       	brcc	.+34     	; 0xb14 <vfprintf+0x32e>
 af2:	28 0c       	add	r2, r8
 af4:	92 2c       	mov	r9, r2
 af6:	9b 18       	sub	r9, r11
 af8:	0e c0       	rjmp	.+28     	; 0xb16 <vfprintf+0x330>
 afa:	b2 14       	cp	r11, r2
 afc:	60 f4       	brcc	.+24     	; 0xb16 <vfprintf+0x330>
 afe:	b6 01       	movw	r22, r12
 b00:	80 e2       	ldi	r24, 0x20	; 32
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 b08:	b3 94       	inc	r11
 b0a:	f7 cf       	rjmp	.-18     	; 0xafa <vfprintf+0x314>
 b0c:	b2 14       	cp	r11, r2
 b0e:	18 f4       	brcc	.+6      	; 0xb16 <vfprintf+0x330>
 b10:	2b 18       	sub	r2, r11
 b12:	02 c0       	rjmp	.+4      	; 0xb18 <vfprintf+0x332>
 b14:	98 2c       	mov	r9, r8
 b16:	21 2c       	mov	r2, r1
 b18:	a4 fe       	sbrs	r10, 4
 b1a:	10 c0       	rjmp	.+32     	; 0xb3c <vfprintf+0x356>
 b1c:	b6 01       	movw	r22, r12
 b1e:	80 e3       	ldi	r24, 0x30	; 48
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 b26:	a2 fe       	sbrs	r10, 2
 b28:	17 c0       	rjmp	.+46     	; 0xb58 <vfprintf+0x372>
 b2a:	a1 fc       	sbrc	r10, 1
 b2c:	03 c0       	rjmp	.+6      	; 0xb34 <vfprintf+0x34e>
 b2e:	88 e7       	ldi	r24, 0x78	; 120
 b30:	90 e0       	ldi	r25, 0x00	; 0
 b32:	02 c0       	rjmp	.+4      	; 0xb38 <vfprintf+0x352>
 b34:	88 e5       	ldi	r24, 0x58	; 88
 b36:	90 e0       	ldi	r25, 0x00	; 0
 b38:	b6 01       	movw	r22, r12
 b3a:	0c c0       	rjmp	.+24     	; 0xb54 <vfprintf+0x36e>
 b3c:	8a 2d       	mov	r24, r10
 b3e:	86 78       	andi	r24, 0x86	; 134
 b40:	59 f0       	breq	.+22     	; 0xb58 <vfprintf+0x372>
 b42:	a1 fe       	sbrs	r10, 1
 b44:	02 c0       	rjmp	.+4      	; 0xb4a <vfprintf+0x364>
 b46:	8b e2       	ldi	r24, 0x2B	; 43
 b48:	01 c0       	rjmp	.+2      	; 0xb4c <vfprintf+0x366>
 b4a:	80 e2       	ldi	r24, 0x20	; 32
 b4c:	a7 fc       	sbrc	r10, 7
 b4e:	8d e2       	ldi	r24, 0x2D	; 45
 b50:	b6 01       	movw	r22, r12
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 b58:	89 14       	cp	r8, r9
 b5a:	38 f4       	brcc	.+14     	; 0xb6a <vfprintf+0x384>
 b5c:	b6 01       	movw	r22, r12
 b5e:	80 e3       	ldi	r24, 0x30	; 48
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 b66:	9a 94       	dec	r9
 b68:	f7 cf       	rjmp	.-18     	; 0xb58 <vfprintf+0x372>
 b6a:	8a 94       	dec	r8
 b6c:	f3 01       	movw	r30, r6
 b6e:	e8 0d       	add	r30, r8
 b70:	f1 1d       	adc	r31, r1
 b72:	80 81       	ld	r24, Z
 b74:	b6 01       	movw	r22, r12
 b76:	90 e0       	ldi	r25, 0x00	; 0
 b78:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 b7c:	81 10       	cpse	r8, r1
 b7e:	f5 cf       	rjmp	.-22     	; 0xb6a <vfprintf+0x384>
 b80:	22 20       	and	r2, r2
 b82:	09 f4       	brne	.+2      	; 0xb86 <vfprintf+0x3a0>
 b84:	42 ce       	rjmp	.-892    	; 0x80a <vfprintf+0x24>
 b86:	b6 01       	movw	r22, r12
 b88:	80 e2       	ldi	r24, 0x20	; 32
 b8a:	90 e0       	ldi	r25, 0x00	; 0
 b8c:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <fputc>
 b90:	2a 94       	dec	r2
 b92:	f6 cf       	rjmp	.-20     	; 0xb80 <vfprintf+0x39a>
 b94:	f6 01       	movw	r30, r12
 b96:	86 81       	ldd	r24, Z+6	; 0x06
 b98:	97 81       	ldd	r25, Z+7	; 0x07
 b9a:	02 c0       	rjmp	.+4      	; 0xba0 <vfprintf+0x3ba>
 b9c:	8f ef       	ldi	r24, 0xFF	; 255
 b9e:	9f ef       	ldi	r25, 0xFF	; 255
 ba0:	2b 96       	adiw	r28, 0x0b	; 11
 ba2:	e2 e1       	ldi	r30, 0x12	; 18
 ba4:	0c 94 a0 06 	jmp	0xd40	; 0xd40 <__epilogue_restores__>

00000ba8 <strnlen_P>:
 ba8:	fc 01       	movw	r30, r24
 baa:	05 90       	lpm	r0, Z+
 bac:	61 50       	subi	r22, 0x01	; 1
 bae:	70 40       	sbci	r23, 0x00	; 0
 bb0:	01 10       	cpse	r0, r1
 bb2:	d8 f7       	brcc	.-10     	; 0xbaa <strnlen_P+0x2>
 bb4:	80 95       	com	r24
 bb6:	90 95       	com	r25
 bb8:	8e 0f       	add	r24, r30
 bba:	9f 1f       	adc	r25, r31
 bbc:	08 95       	ret

00000bbe <strnlen>:
 bbe:	fc 01       	movw	r30, r24
 bc0:	61 50       	subi	r22, 0x01	; 1
 bc2:	70 40       	sbci	r23, 0x00	; 0
 bc4:	01 90       	ld	r0, Z+
 bc6:	01 10       	cpse	r0, r1
 bc8:	d8 f7       	brcc	.-10     	; 0xbc0 <strnlen+0x2>
 bca:	80 95       	com	r24
 bcc:	90 95       	com	r25
 bce:	8e 0f       	add	r24, r30
 bd0:	9f 1f       	adc	r25, r31
 bd2:	08 95       	ret

00000bd4 <fputc>:
 bd4:	0f 93       	push	r16
 bd6:	1f 93       	push	r17
 bd8:	cf 93       	push	r28
 bda:	df 93       	push	r29
 bdc:	fb 01       	movw	r30, r22
 bde:	23 81       	ldd	r18, Z+3	; 0x03
 be0:	21 fd       	sbrc	r18, 1
 be2:	03 c0       	rjmp	.+6      	; 0xbea <fputc+0x16>
 be4:	8f ef       	ldi	r24, 0xFF	; 255
 be6:	9f ef       	ldi	r25, 0xFF	; 255
 be8:	2c c0       	rjmp	.+88     	; 0xc42 <fputc+0x6e>
 bea:	22 ff       	sbrs	r18, 2
 bec:	16 c0       	rjmp	.+44     	; 0xc1a <fputc+0x46>
 bee:	46 81       	ldd	r20, Z+6	; 0x06
 bf0:	57 81       	ldd	r21, Z+7	; 0x07
 bf2:	24 81       	ldd	r18, Z+4	; 0x04
 bf4:	35 81       	ldd	r19, Z+5	; 0x05
 bf6:	42 17       	cp	r20, r18
 bf8:	53 07       	cpc	r21, r19
 bfa:	44 f4       	brge	.+16     	; 0xc0c <fputc+0x38>
 bfc:	a0 81       	ld	r26, Z
 bfe:	b1 81       	ldd	r27, Z+1	; 0x01
 c00:	9d 01       	movw	r18, r26
 c02:	2f 5f       	subi	r18, 0xFF	; 255
 c04:	3f 4f       	sbci	r19, 0xFF	; 255
 c06:	31 83       	std	Z+1, r19	; 0x01
 c08:	20 83       	st	Z, r18
 c0a:	8c 93       	st	X, r24
 c0c:	26 81       	ldd	r18, Z+6	; 0x06
 c0e:	37 81       	ldd	r19, Z+7	; 0x07
 c10:	2f 5f       	subi	r18, 0xFF	; 255
 c12:	3f 4f       	sbci	r19, 0xFF	; 255
 c14:	37 83       	std	Z+7, r19	; 0x07
 c16:	26 83       	std	Z+6, r18	; 0x06
 c18:	14 c0       	rjmp	.+40     	; 0xc42 <fputc+0x6e>
 c1a:	8b 01       	movw	r16, r22
 c1c:	ec 01       	movw	r28, r24
 c1e:	fb 01       	movw	r30, r22
 c20:	00 84       	ldd	r0, Z+8	; 0x08
 c22:	f1 85       	ldd	r31, Z+9	; 0x09
 c24:	e0 2d       	mov	r30, r0
 c26:	09 95       	icall
 c28:	89 2b       	or	r24, r25
 c2a:	e1 f6       	brne	.-72     	; 0xbe4 <fputc+0x10>
 c2c:	d8 01       	movw	r26, r16
 c2e:	16 96       	adiw	r26, 0x06	; 6
 c30:	8d 91       	ld	r24, X+
 c32:	9c 91       	ld	r25, X
 c34:	17 97       	sbiw	r26, 0x07	; 7
 c36:	01 96       	adiw	r24, 0x01	; 1
 c38:	17 96       	adiw	r26, 0x07	; 7
 c3a:	9c 93       	st	X, r25
 c3c:	8e 93       	st	-X, r24
 c3e:	16 97       	sbiw	r26, 0x06	; 6
 c40:	ce 01       	movw	r24, r28
 c42:	df 91       	pop	r29
 c44:	cf 91       	pop	r28
 c46:	1f 91       	pop	r17
 c48:	0f 91       	pop	r16
 c4a:	08 95       	ret

00000c4c <__ultoa_invert>:
 c4c:	fa 01       	movw	r30, r20
 c4e:	aa 27       	eor	r26, r26
 c50:	28 30       	cpi	r18, 0x08	; 8
 c52:	51 f1       	breq	.+84     	; 0xca8 <__ultoa_invert+0x5c>
 c54:	20 31       	cpi	r18, 0x10	; 16
 c56:	81 f1       	breq	.+96     	; 0xcb8 <__ultoa_invert+0x6c>
 c58:	e8 94       	clt
 c5a:	6f 93       	push	r22
 c5c:	6e 7f       	andi	r22, 0xFE	; 254
 c5e:	6e 5f       	subi	r22, 0xFE	; 254
 c60:	7f 4f       	sbci	r23, 0xFF	; 255
 c62:	8f 4f       	sbci	r24, 0xFF	; 255
 c64:	9f 4f       	sbci	r25, 0xFF	; 255
 c66:	af 4f       	sbci	r26, 0xFF	; 255
 c68:	b1 e0       	ldi	r27, 0x01	; 1
 c6a:	3e d0       	rcall	.+124    	; 0xce8 <__ultoa_invert+0x9c>
 c6c:	b4 e0       	ldi	r27, 0x04	; 4
 c6e:	3c d0       	rcall	.+120    	; 0xce8 <__ultoa_invert+0x9c>
 c70:	67 0f       	add	r22, r23
 c72:	78 1f       	adc	r23, r24
 c74:	89 1f       	adc	r24, r25
 c76:	9a 1f       	adc	r25, r26
 c78:	a1 1d       	adc	r26, r1
 c7a:	68 0f       	add	r22, r24
 c7c:	79 1f       	adc	r23, r25
 c7e:	8a 1f       	adc	r24, r26
 c80:	91 1d       	adc	r25, r1
 c82:	a1 1d       	adc	r26, r1
 c84:	6a 0f       	add	r22, r26
 c86:	71 1d       	adc	r23, r1
 c88:	81 1d       	adc	r24, r1
 c8a:	91 1d       	adc	r25, r1
 c8c:	a1 1d       	adc	r26, r1
 c8e:	20 d0       	rcall	.+64     	; 0xcd0 <__ultoa_invert+0x84>
 c90:	09 f4       	brne	.+2      	; 0xc94 <__ultoa_invert+0x48>
 c92:	68 94       	set
 c94:	3f 91       	pop	r19
 c96:	2a e0       	ldi	r18, 0x0A	; 10
 c98:	26 9f       	mul	r18, r22
 c9a:	11 24       	eor	r1, r1
 c9c:	30 19       	sub	r19, r0
 c9e:	30 5d       	subi	r19, 0xD0	; 208
 ca0:	31 93       	st	Z+, r19
 ca2:	de f6       	brtc	.-74     	; 0xc5a <__ultoa_invert+0xe>
 ca4:	cf 01       	movw	r24, r30
 ca6:	08 95       	ret
 ca8:	46 2f       	mov	r20, r22
 caa:	47 70       	andi	r20, 0x07	; 7
 cac:	40 5d       	subi	r20, 0xD0	; 208
 cae:	41 93       	st	Z+, r20
 cb0:	b3 e0       	ldi	r27, 0x03	; 3
 cb2:	0f d0       	rcall	.+30     	; 0xcd2 <__ultoa_invert+0x86>
 cb4:	c9 f7       	brne	.-14     	; 0xca8 <__ultoa_invert+0x5c>
 cb6:	f6 cf       	rjmp	.-20     	; 0xca4 <__ultoa_invert+0x58>
 cb8:	46 2f       	mov	r20, r22
 cba:	4f 70       	andi	r20, 0x0F	; 15
 cbc:	40 5d       	subi	r20, 0xD0	; 208
 cbe:	4a 33       	cpi	r20, 0x3A	; 58
 cc0:	18 f0       	brcs	.+6      	; 0xcc8 <__ultoa_invert+0x7c>
 cc2:	49 5d       	subi	r20, 0xD9	; 217
 cc4:	31 fd       	sbrc	r19, 1
 cc6:	40 52       	subi	r20, 0x20	; 32
 cc8:	41 93       	st	Z+, r20
 cca:	02 d0       	rcall	.+4      	; 0xcd0 <__ultoa_invert+0x84>
 ccc:	a9 f7       	brne	.-22     	; 0xcb8 <__ultoa_invert+0x6c>
 cce:	ea cf       	rjmp	.-44     	; 0xca4 <__ultoa_invert+0x58>
 cd0:	b4 e0       	ldi	r27, 0x04	; 4
 cd2:	a6 95       	lsr	r26
 cd4:	97 95       	ror	r25
 cd6:	87 95       	ror	r24
 cd8:	77 95       	ror	r23
 cda:	67 95       	ror	r22
 cdc:	ba 95       	dec	r27
 cde:	c9 f7       	brne	.-14     	; 0xcd2 <__ultoa_invert+0x86>
 ce0:	00 97       	sbiw	r24, 0x00	; 0
 ce2:	61 05       	cpc	r22, r1
 ce4:	71 05       	cpc	r23, r1
 ce6:	08 95       	ret
 ce8:	9b 01       	movw	r18, r22
 cea:	ac 01       	movw	r20, r24
 cec:	0a 2e       	mov	r0, r26
 cee:	06 94       	lsr	r0
 cf0:	57 95       	ror	r21
 cf2:	47 95       	ror	r20
 cf4:	37 95       	ror	r19
 cf6:	27 95       	ror	r18
 cf8:	ba 95       	dec	r27
 cfa:	c9 f7       	brne	.-14     	; 0xcee <__ultoa_invert+0xa2>
 cfc:	62 0f       	add	r22, r18
 cfe:	73 1f       	adc	r23, r19
 d00:	84 1f       	adc	r24, r20
 d02:	95 1f       	adc	r25, r21
 d04:	a0 1d       	adc	r26, r0
 d06:	08 95       	ret

00000d08 <__prologue_saves__>:
 d08:	2f 92       	push	r2
 d0a:	3f 92       	push	r3
 d0c:	4f 92       	push	r4
 d0e:	5f 92       	push	r5
 d10:	6f 92       	push	r6
 d12:	7f 92       	push	r7
 d14:	8f 92       	push	r8
 d16:	9f 92       	push	r9
 d18:	af 92       	push	r10
 d1a:	bf 92       	push	r11
 d1c:	cf 92       	push	r12
 d1e:	df 92       	push	r13
 d20:	ef 92       	push	r14
 d22:	ff 92       	push	r15
 d24:	0f 93       	push	r16
 d26:	1f 93       	push	r17
 d28:	cf 93       	push	r28
 d2a:	df 93       	push	r29
 d2c:	cd b7       	in	r28, 0x3d	; 61
 d2e:	de b7       	in	r29, 0x3e	; 62
 d30:	ca 1b       	sub	r28, r26
 d32:	db 0b       	sbc	r29, r27
 d34:	0f b6       	in	r0, 0x3f	; 63
 d36:	f8 94       	cli
 d38:	de bf       	out	0x3e, r29	; 62
 d3a:	0f be       	out	0x3f, r0	; 63
 d3c:	cd bf       	out	0x3d, r28	; 61
 d3e:	09 94       	ijmp

00000d40 <__epilogue_restores__>:
 d40:	2a 88       	ldd	r2, Y+18	; 0x12
 d42:	39 88       	ldd	r3, Y+17	; 0x11
 d44:	48 88       	ldd	r4, Y+16	; 0x10
 d46:	5f 84       	ldd	r5, Y+15	; 0x0f
 d48:	6e 84       	ldd	r6, Y+14	; 0x0e
 d4a:	7d 84       	ldd	r7, Y+13	; 0x0d
 d4c:	8c 84       	ldd	r8, Y+12	; 0x0c
 d4e:	9b 84       	ldd	r9, Y+11	; 0x0b
 d50:	aa 84       	ldd	r10, Y+10	; 0x0a
 d52:	b9 84       	ldd	r11, Y+9	; 0x09
 d54:	c8 84       	ldd	r12, Y+8	; 0x08
 d56:	df 80       	ldd	r13, Y+7	; 0x07
 d58:	ee 80       	ldd	r14, Y+6	; 0x06
 d5a:	fd 80       	ldd	r15, Y+5	; 0x05
 d5c:	0c 81       	ldd	r16, Y+4	; 0x04
 d5e:	1b 81       	ldd	r17, Y+3	; 0x03
 d60:	aa 81       	ldd	r26, Y+2	; 0x02
 d62:	b9 81       	ldd	r27, Y+1	; 0x01
 d64:	ce 0f       	add	r28, r30
 d66:	d1 1d       	adc	r29, r1
 d68:	0f b6       	in	r0, 0x3f	; 63
 d6a:	f8 94       	cli
 d6c:	de bf       	out	0x3e, r29	; 62
 d6e:	0f be       	out	0x3f, r0	; 63
 d70:	cd bf       	out	0x3d, r28	; 61
 d72:	ed 01       	movw	r28, r26
 d74:	08 95       	ret

00000d76 <_exit>:
 d76:	f8 94       	cli

00000d78 <__stop_program>:
 d78:	ff cf       	rjmp	.-2      	; 0xd78 <__stop_program>
