
SPI_P2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000008cc  00000960  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  0080006a  0080006a  0000096a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000096a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000099c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  000009d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018dc  00000000  00000000  00000ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007fc  00000000  00000000  000023c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bfc  00000000  00000000  00002bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d0  00000000  00000000  000037bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ba  00000000  00000000  00003a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000df2  00000000  00000000  00003f46  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00004d38  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 af 03 	jmp	0x75e	; 0x75e <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ec       	ldi	r30, 0xCC	; 204
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 37       	cpi	r26, 0x77	; 119
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 91 03 	call	0x722	; 0x722 <main>
  8a:	0c 94 64 04 	jmp	0x8c8	; 0x8c8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <pinChange+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <pinChange+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <pinChange+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <pinChange+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <pinChange+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <pinChange+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <pinChange+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinChange+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <pinChange+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <pinChange+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <pinChange+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <pinChange+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <pinChange+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <Lcd4_Port>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <Lcd4_Port+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	86 e1       	ldi	r24, 0x16	; 22
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 326:	06 c0       	rjmp	.+12     	; 0x334 <Lcd4_Port+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	86 e1       	ldi	r24, 0x16	; 22
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <Lcd4_Port+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	87 e1       	ldi	r24, 0x17	; 23
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 344:	06 c0       	rjmp	.+12     	; 0x352 <Lcd4_Port+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	87 e1       	ldi	r24, 0x17	; 23
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <Lcd4_Port+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	88 e1       	ldi	r24, 0x18	; 24
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 362:	06 c0       	rjmp	.+12     	; 0x370 <Lcd4_Port+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	88 e1       	ldi	r24, 0x18	; 24
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <Lcd4_Port+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	89 e1       	ldi	r24, 0x19	; 25
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 380:	06 c0       	rjmp	.+12     	; 0x38e <Lcd4_Port+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	89 e1       	ldi	r24, 0x19	; 25
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <Lcd4_Cmd>:
 392:	cf 93       	push	r28
 394:	c8 2f       	mov	r28, r24
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	84 e1       	ldi	r24, 0x14	; 20
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	85 e1       	ldi	r24, 0x15	; 21
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3b4:	8f e9       	ldi	r24, 0x9F	; 159
 3b6:	9f e0       	ldi	r25, 0x0F	; 15
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <Lcd4_Cmd+0x26>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <Lcd4_Cmd+0x2c>
 3be:	00 00       	nop
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	85 e1       	ldi	r24, 0x15	; 21
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3cc:	8f e9       	ldi	r24, 0x9F	; 159
 3ce:	9f e0       	ldi	r25, 0x0F	; 15
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <Lcd4_Cmd+0x3e>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <Lcd4_Cmd+0x44>
 3d6:	00 00       	nop
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <Lcd4_Set_Cursor>:
 3dc:	cf 93       	push	r28
 3de:	c6 2f       	mov	r28, r22
 3e0:	81 30       	cpi	r24, 0x01	; 1
 3e2:	59 f4       	brne	.+22     	; 0x3fa <Lcd4_Set_Cursor+0x1e>
 3e4:	80 e8       	ldi	r24, 0x80	; 128
 3e6:	86 0f       	add	r24, r22
 3e8:	82 95       	swap	r24
 3ea:	8f 70       	andi	r24, 0x0F	; 15
 3ec:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3f0:	8c 2f       	mov	r24, r28
 3f2:	8f 70       	andi	r24, 0x0F	; 15
 3f4:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3f8:	0c c0       	rjmp	.+24     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fa:	82 30       	cpi	r24, 0x02	; 2
 3fc:	51 f4       	brne	.+20     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fe:	80 ec       	ldi	r24, 0xC0	; 192
 400:	86 0f       	add	r24, r22
 402:	82 95       	swap	r24
 404:	8f 70       	andi	r24, 0x0F	; 15
 406:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 40a:	8c 2f       	mov	r24, r28
 40c:	8f 70       	andi	r24, 0x0F	; 15
 40e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 412:	cf 91       	pop	r28
 414:	08 95       	ret

00000416 <Lcd4_Init>:
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 41c:	2f ef       	ldi	r18, 0xFF	; 255
 41e:	89 ef       	ldi	r24, 0xF9	; 249
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	21 50       	subi	r18, 0x01	; 1
 424:	80 40       	sbci	r24, 0x00	; 0
 426:	90 40       	sbci	r25, 0x00	; 0
 428:	e1 f7       	brne	.-8      	; 0x422 <Lcd4_Init+0xc>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <Lcd4_Init+0x16>
 42c:	00 00       	nop
 42e:	83 e0       	ldi	r24, 0x03	; 3
 430:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 434:	8f e1       	ldi	r24, 0x1F	; 31
 436:	9e e4       	ldi	r25, 0x4E	; 78
 438:	01 97       	sbiw	r24, 0x01	; 1
 43a:	f1 f7       	brne	.-4      	; 0x438 <Lcd4_Init+0x22>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <Lcd4_Init+0x28>
 43e:	00 00       	nop
 440:	83 e0       	ldi	r24, 0x03	; 3
 442:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 446:	8f ed       	ldi	r24, 0xDF	; 223
 448:	9b ea       	ldi	r25, 0xAB	; 171
 44a:	01 97       	sbiw	r24, 0x01	; 1
 44c:	f1 f7       	brne	.-4      	; 0x44a <Lcd4_Init+0x34>
 44e:	00 c0       	rjmp	.+0      	; 0x450 <Lcd4_Init+0x3a>
 450:	00 00       	nop
 452:	83 e0       	ldi	r24, 0x03	; 3
 454:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 458:	82 e0       	ldi	r24, 0x02	; 2
 45a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 45e:	82 e0       	ldi	r24, 0x02	; 2
 460:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 464:	88 e0       	ldi	r24, 0x08	; 8
 466:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 470:	8c e0       	ldi	r24, 0x0C	; 12
 472:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 47c:	86 e0       	ldi	r24, 0x06	; 6
 47e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 482:	08 95       	ret

00000484 <Lcd4_Write_Char>:
 484:	cf 93       	push	r28
 486:	c8 2f       	mov	r28, r24
 488:	61 e0       	ldi	r22, 0x01	; 1
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	84 e1       	ldi	r24, 0x14	; 20
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 494:	8c 2f       	mov	r24, r28
 496:	82 95       	swap	r24
 498:	8f 70       	andi	r24, 0x0F	; 15
 49a:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 49e:	61 e0       	ldi	r22, 0x01	; 1
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	85 e1       	ldi	r24, 0x15	; 21
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4aa:	8f e9       	ldi	r24, 0x9F	; 159
 4ac:	9f e0       	ldi	r25, 0x0F	; 15
 4ae:	01 97       	sbiw	r24, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <Lcd4_Write_Char+0x2a>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <Lcd4_Write_Char+0x30>
 4b4:	00 00       	nop
 4b6:	60 e0       	ldi	r22, 0x00	; 0
 4b8:	70 e0       	ldi	r23, 0x00	; 0
 4ba:	85 e1       	ldi	r24, 0x15	; 21
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4c2:	8f e9       	ldi	r24, 0x9F	; 159
 4c4:	9f e0       	ldi	r25, 0x0F	; 15
 4c6:	01 97       	sbiw	r24, 0x01	; 1
 4c8:	f1 f7       	brne	.-4      	; 0x4c6 <Lcd4_Write_Char+0x42>
 4ca:	00 c0       	rjmp	.+0      	; 0x4cc <Lcd4_Write_Char+0x48>
 4cc:	00 00       	nop
 4ce:	8c 2f       	mov	r24, r28
 4d0:	8f 70       	andi	r24, 0x0F	; 15
 4d2:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4d6:	61 e0       	ldi	r22, 0x01	; 1
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	85 e1       	ldi	r24, 0x15	; 21
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4e2:	8f e9       	ldi	r24, 0x9F	; 159
 4e4:	9f e0       	ldi	r25, 0x0F	; 15
 4e6:	01 97       	sbiw	r24, 0x01	; 1
 4e8:	f1 f7       	brne	.-4      	; 0x4e6 <Lcd4_Write_Char+0x62>
 4ea:	00 c0       	rjmp	.+0      	; 0x4ec <Lcd4_Write_Char+0x68>
 4ec:	00 00       	nop
 4ee:	60 e0       	ldi	r22, 0x00	; 0
 4f0:	70 e0       	ldi	r23, 0x00	; 0
 4f2:	85 e1       	ldi	r24, 0x15	; 21
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4fa:	8f e9       	ldi	r24, 0x9F	; 159
 4fc:	9f e0       	ldi	r25, 0x0F	; 15
 4fe:	01 97       	sbiw	r24, 0x01	; 1
 500:	f1 f7       	brne	.-4      	; 0x4fe <Lcd4_Write_Char+0x7a>
 502:	00 c0       	rjmp	.+0      	; 0x504 <Lcd4_Write_Char+0x80>
 504:	00 00       	nop
 506:	cf 91       	pop	r28
 508:	08 95       	ret

0000050a <Lcd4_Write_String>:
 50a:	cf 93       	push	r28
 50c:	df 93       	push	r29
 50e:	ec 01       	movw	r28, r24
 510:	88 81       	ld	r24, Y
 512:	88 23       	and	r24, r24
 514:	31 f0       	breq	.+12     	; 0x522 <Lcd4_Write_String+0x18>
 516:	21 96       	adiw	r28, 0x01	; 1
 518:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
 51c:	89 91       	ld	r24, Y+
 51e:	81 11       	cpse	r24, r1
 520:	fb cf       	rjmp	.-10     	; 0x518 <Lcd4_Write_String+0xe>
 522:	df 91       	pop	r29
 524:	cf 91       	pop	r28
 526:	08 95       	ret

00000528 <Lcd_Display>:
  {
    Lcd_Display(x_value,y_value);
  }
}
void Lcd_Display(unsigned int x, unsigned int y)
{
 528:	cf 92       	push	r12
 52a:	df 92       	push	r13
 52c:	ef 92       	push	r14
 52e:	ff 92       	push	r15
 530:	0f 93       	push	r16
 532:	1f 93       	push	r17
 534:	cf 93       	push	r28
 536:	df 93       	push	r29
 538:	8c 01       	movw	r16, r24
 53a:	eb 01       	movw	r28, r22
	Lcd4_Set_Cursor(1, 4);
 53c:	64 e0       	ldi	r22, 0x04	; 4
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	Lcd4_Write_Char(x/1000+48);
 544:	98 01       	movw	r18, r16
 546:	36 95       	lsr	r19
 548:	27 95       	ror	r18
 54a:	36 95       	lsr	r19
 54c:	27 95       	ror	r18
 54e:	36 95       	lsr	r19
 550:	27 95       	ror	r18
 552:	a5 ec       	ldi	r26, 0xC5	; 197
 554:	b0 e2       	ldi	r27, 0x20	; 32
 556:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 55a:	6c 01       	movw	r12, r24
 55c:	d6 94       	lsr	r13
 55e:	c7 94       	ror	r12
 560:	d6 94       	lsr	r13
 562:	c7 94       	ror	r12
 564:	d6 94       	lsr	r13
 566:	c7 94       	ror	r12
 568:	d6 94       	lsr	r13
 56a:	c7 94       	ror	r12
 56c:	80 e3       	ldi	r24, 0x30	; 48
 56e:	8c 0d       	add	r24, r12
 570:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
	Lcd4_Write_Char((x%1000)/100+48);
 574:	0f 2e       	mov	r0, r31
 576:	f8 ee       	ldi	r31, 0xE8	; 232
 578:	ef 2e       	mov	r14, r31
 57a:	f3 e0       	ldi	r31, 0x03	; 3
 57c:	ff 2e       	mov	r15, r31
 57e:	f0 2d       	mov	r31, r0
 580:	ce 9c       	mul	r12, r14
 582:	c0 01       	movw	r24, r0
 584:	cf 9c       	mul	r12, r15
 586:	90 0d       	add	r25, r0
 588:	de 9c       	mul	r13, r14
 58a:	90 0d       	add	r25, r0
 58c:	11 24       	eor	r1, r1
 58e:	98 01       	movw	r18, r16
 590:	28 1b       	sub	r18, r24
 592:	39 0b       	sbc	r19, r25
 594:	36 95       	lsr	r19
 596:	27 95       	ror	r18
 598:	36 95       	lsr	r19
 59a:	27 95       	ror	r18
 59c:	ab e7       	ldi	r26, 0x7B	; 123
 59e:	b4 e1       	ldi	r27, 0x14	; 20
 5a0:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 5a4:	96 95       	lsr	r25
 5a6:	87 95       	ror	r24
 5a8:	80 5d       	subi	r24, 0xD0	; 208
 5aa:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
	Lcd4_Write_Char((x%100)/10+48);
 5ae:	98 01       	movw	r18, r16
 5b0:	36 95       	lsr	r19
 5b2:	27 95       	ror	r18
 5b4:	36 95       	lsr	r19
 5b6:	27 95       	ror	r18
 5b8:	ab e7       	ldi	r26, 0x7B	; 123
 5ba:	b4 e1       	ldi	r27, 0x14	; 20
 5bc:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 5c0:	96 95       	lsr	r25
 5c2:	87 95       	ror	r24
 5c4:	0f 2e       	mov	r0, r31
 5c6:	f4 e6       	ldi	r31, 0x64	; 100
 5c8:	df 2e       	mov	r13, r31
 5ca:	f0 2d       	mov	r31, r0
 5cc:	d8 9e       	mul	r13, r24
 5ce:	90 01       	movw	r18, r0
 5d0:	d9 9e       	mul	r13, r25
 5d2:	30 0d       	add	r19, r0
 5d4:	11 24       	eor	r1, r1
 5d6:	c8 01       	movw	r24, r16
 5d8:	82 1b       	sub	r24, r18
 5da:	93 0b       	sbc	r25, r19
 5dc:	9c 01       	movw	r18, r24
 5de:	ad ec       	ldi	r26, 0xCD	; 205
 5e0:	bc ec       	ldi	r27, 0xCC	; 204
 5e2:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 5e6:	96 95       	lsr	r25
 5e8:	87 95       	ror	r24
 5ea:	96 95       	lsr	r25
 5ec:	87 95       	ror	r24
 5ee:	96 95       	lsr	r25
 5f0:	87 95       	ror	r24
 5f2:	80 5d       	subi	r24, 0xD0	; 208
 5f4:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
	Lcd4_Write_Char(x%10+48);
 5f8:	98 01       	movw	r18, r16
 5fa:	ad ec       	ldi	r26, 0xCD	; 205
 5fc:	bc ec       	ldi	r27, 0xCC	; 204
 5fe:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 602:	96 95       	lsr	r25
 604:	87 95       	ror	r24
 606:	96 95       	lsr	r25
 608:	87 95       	ror	r24
 60a:	96 95       	lsr	r25
 60c:	87 95       	ror	r24
 60e:	9c 01       	movw	r18, r24
 610:	22 0f       	add	r18, r18
 612:	33 1f       	adc	r19, r19
 614:	88 0f       	add	r24, r24
 616:	99 1f       	adc	r25, r25
 618:	88 0f       	add	r24, r24
 61a:	99 1f       	adc	r25, r25
 61c:	88 0f       	add	r24, r24
 61e:	99 1f       	adc	r25, r25
 620:	82 0f       	add	r24, r18
 622:	93 1f       	adc	r25, r19
 624:	98 01       	movw	r18, r16
 626:	28 1b       	sub	r18, r24
 628:	39 0b       	sbc	r19, r25
 62a:	c9 01       	movw	r24, r18
 62c:	80 5d       	subi	r24, 0xD0	; 208
 62e:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>

	Lcd4_Set_Cursor(2, 4);
 632:	64 e0       	ldi	r22, 0x04	; 4
 634:	82 e0       	ldi	r24, 0x02	; 2
 636:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	Lcd4_Write_Char(y/1000+48);
 63a:	9e 01       	movw	r18, r28
 63c:	36 95       	lsr	r19
 63e:	27 95       	ror	r18
 640:	36 95       	lsr	r19
 642:	27 95       	ror	r18
 644:	36 95       	lsr	r19
 646:	27 95       	ror	r18
 648:	a5 ec       	ldi	r26, 0xC5	; 197
 64a:	b0 e2       	ldi	r27, 0x20	; 32
 64c:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 650:	8c 01       	movw	r16, r24
 652:	12 95       	swap	r17
 654:	02 95       	swap	r16
 656:	0f 70       	andi	r16, 0x0F	; 15
 658:	01 27       	eor	r16, r17
 65a:	1f 70       	andi	r17, 0x0F	; 15
 65c:	01 27       	eor	r16, r17
 65e:	80 e3       	ldi	r24, 0x30	; 48
 660:	80 0f       	add	r24, r16
 662:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
	Lcd4_Write_Char((y%1000)/100+48);
 666:	0e 9d       	mul	r16, r14
 668:	c0 01       	movw	r24, r0
 66a:	0f 9d       	mul	r16, r15
 66c:	90 0d       	add	r25, r0
 66e:	1e 9d       	mul	r17, r14
 670:	90 0d       	add	r25, r0
 672:	11 24       	eor	r1, r1
 674:	9e 01       	movw	r18, r28
 676:	28 1b       	sub	r18, r24
 678:	39 0b       	sbc	r19, r25
 67a:	36 95       	lsr	r19
 67c:	27 95       	ror	r18
 67e:	36 95       	lsr	r19
 680:	27 95       	ror	r18
 682:	ab e7       	ldi	r26, 0x7B	; 123
 684:	b4 e1       	ldi	r27, 0x14	; 20
 686:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 68a:	96 95       	lsr	r25
 68c:	87 95       	ror	r24
 68e:	80 5d       	subi	r24, 0xD0	; 208
 690:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
	Lcd4_Write_Char((y%100)/10+48);
 694:	9e 01       	movw	r18, r28
 696:	36 95       	lsr	r19
 698:	27 95       	ror	r18
 69a:	36 95       	lsr	r19
 69c:	27 95       	ror	r18
 69e:	ab e7       	ldi	r26, 0x7B	; 123
 6a0:	b4 e1       	ldi	r27, 0x14	; 20
 6a2:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 6a6:	96 95       	lsr	r25
 6a8:	87 95       	ror	r24
 6aa:	d8 9e       	mul	r13, r24
 6ac:	90 01       	movw	r18, r0
 6ae:	d9 9e       	mul	r13, r25
 6b0:	30 0d       	add	r19, r0
 6b2:	11 24       	eor	r1, r1
 6b4:	ce 01       	movw	r24, r28
 6b6:	82 1b       	sub	r24, r18
 6b8:	93 0b       	sbc	r25, r19
 6ba:	9c 01       	movw	r18, r24
 6bc:	ad ec       	ldi	r26, 0xCD	; 205
 6be:	bc ec       	ldi	r27, 0xCC	; 204
 6c0:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 6c4:	96 95       	lsr	r25
 6c6:	87 95       	ror	r24
 6c8:	96 95       	lsr	r25
 6ca:	87 95       	ror	r24
 6cc:	96 95       	lsr	r25
 6ce:	87 95       	ror	r24
 6d0:	80 5d       	subi	r24, 0xD0	; 208
 6d2:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
	Lcd4_Write_Char(y%10+48);
 6d6:	9e 01       	movw	r18, r28
 6d8:	ad ec       	ldi	r26, 0xCD	; 205
 6da:	bc ec       	ldi	r27, 0xCC	; 204
 6dc:	0e 94 55 04 	call	0x8aa	; 0x8aa <__umulhisi3>
 6e0:	96 95       	lsr	r25
 6e2:	87 95       	ror	r24
 6e4:	96 95       	lsr	r25
 6e6:	87 95       	ror	r24
 6e8:	96 95       	lsr	r25
 6ea:	87 95       	ror	r24
 6ec:	9c 01       	movw	r18, r24
 6ee:	22 0f       	add	r18, r18
 6f0:	33 1f       	adc	r19, r19
 6f2:	88 0f       	add	r24, r24
 6f4:	99 1f       	adc	r25, r25
 6f6:	88 0f       	add	r24, r24
 6f8:	99 1f       	adc	r25, r25
 6fa:	88 0f       	add	r24, r24
 6fc:	99 1f       	adc	r25, r25
 6fe:	82 0f       	add	r24, r18
 700:	93 1f       	adc	r25, r19
 702:	9e 01       	movw	r18, r28
 704:	28 1b       	sub	r18, r24
 706:	39 0b       	sbc	r19, r25
 708:	c9 01       	movw	r24, r18
 70a:	80 5d       	subi	r24, 0xD0	; 208
 70c:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
}   
 710:	df 91       	pop	r29
 712:	cf 91       	pop	r28
 714:	1f 91       	pop	r17
 716:	0f 91       	pop	r16
 718:	ff 90       	pop	r15
 71a:	ef 90       	pop	r14
 71c:	df 90       	pop	r13
 71e:	cf 90       	pop	r12
 720:	08 95       	ret

00000722 <main>:
int main(void)
{
  // bien
  
  // port
  DDRC = 0xFF;
 722:	8f ef       	ldi	r24, 0xFF	; 255
 724:	84 bb       	out	0x14, r24	; 20
  // chuong trinh con
  Spi_Init_Slave();
 726:	0e 94 30 04 	call	0x860	; 0x860 <Spi_Init_Slave>
  Lcd4_Init();
 72a:	0e 94 0b 02 	call	0x416	; 0x416 <Lcd4_Init>
  sei();
 72e:	78 94       	sei
  // begin
  Lcd4_Write_String("x = ");
 730:	80 e6       	ldi	r24, 0x60	; 96
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 85 02 	call	0x50a	; 0x50a <Lcd4_Write_String>
  Lcd4_Set_Cursor(2,0);
 738:	60 e0       	ldi	r22, 0x00	; 0
 73a:	82 e0       	ldi	r24, 0x02	; 2
 73c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
  Lcd4_Write_String("y = ");
 740:	85 e6       	ldi	r24, 0x65	; 101
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 85 02 	call	0x50a	; 0x50a <Lcd4_Write_String>
  while(1)
  {
    Lcd_Display(x_value,y_value);
 748:	60 91 6c 00 	lds	r22, 0x006C	; 0x80006c <y_value>
 74c:	70 91 6d 00 	lds	r23, 0x006D	; 0x80006d <y_value+0x1>
 750:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 754:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 758:	0e 94 94 02 	call	0x528	; 0x528 <Lcd_Display>
 75c:	f5 cf       	rjmp	.-22     	; 0x748 <main+0x26>

0000075e <__vector_10>:
	Lcd4_Write_Char((y%1000)/100+48);
	Lcd4_Write_Char((y%100)/10+48);
	Lcd4_Write_Char(y%10+48);
}   
ISR (SPI_STC_vect)
{
 75e:	1f 92       	push	r1
 760:	0f 92       	push	r0
 762:	0f b6       	in	r0, 0x3f	; 63
 764:	0f 92       	push	r0
 766:	11 24       	eor	r1, r1
 768:	2f 93       	push	r18
 76a:	3f 93       	push	r19
 76c:	4f 93       	push	r20
 76e:	5f 93       	push	r21
 770:	6f 93       	push	r22
 772:	7f 93       	push	r23
 774:	8f 93       	push	r24
 776:	9f 93       	push	r25
 778:	af 93       	push	r26
 77a:	bf 93       	push	r27
 77c:	cf 93       	push	r28
 77e:	df 93       	push	r29
 780:	ef 93       	push	r30
 782:	ff 93       	push	r31
  s = Spi_Read();
 784:	0e 94 3b 04 	call	0x876	; 0x876 <Spi_Read>
 788:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <s>
  if(s == ':') 
 78c:	8a 33       	cpi	r24, 0x3A	; 58
 78e:	31 f4       	brne	.+12     	; 0x79c <__vector_10+0x3e>
  {
    Spi_Read_Text(data, 8);
 790:	68 e0       	ldi	r22, 0x08	; 8
 792:	70 e0       	ldi	r23, 0x00	; 0
 794:	8e e6       	ldi	r24, 0x6E	; 110
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	0e 94 3f 04 	call	0x87e	; 0x87e <Spi_Read_Text>
  }
  x_value = data[0]*1000+data[1]*100+data[2]*10+data[3];
 79c:	ee e6       	ldi	r30, 0x6E	; 110
 79e:	f0 e0       	ldi	r31, 0x00	; 0
 7a0:	20 81       	ld	r18, Z
 7a2:	68 ee       	ldi	r22, 0xE8	; 232
 7a4:	73 e0       	ldi	r23, 0x03	; 3
 7a6:	26 9f       	mul	r18, r22
 7a8:	c0 01       	movw	r24, r0
 7aa:	27 9f       	mul	r18, r23
 7ac:	90 0d       	add	r25, r0
 7ae:	11 24       	eor	r1, r1
 7b0:	21 81       	ldd	r18, Z+1	; 0x01
 7b2:	a4 e6       	ldi	r26, 0x64	; 100
 7b4:	ac 01       	movw	r20, r24
 7b6:	a2 9f       	mul	r26, r18
 7b8:	40 0d       	add	r20, r0
 7ba:	51 1d       	adc	r21, r1
 7bc:	11 24       	eor	r1, r1
 7be:	92 81       	ldd	r25, Z+2	; 0x02
 7c0:	89 2f       	mov	r24, r25
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	ec 01       	movw	r28, r24
 7c6:	cc 0f       	add	r28, r28
 7c8:	dd 1f       	adc	r29, r29
 7ca:	9c 01       	movw	r18, r24
 7cc:	22 0f       	add	r18, r18
 7ce:	33 1f       	adc	r19, r19
 7d0:	22 0f       	add	r18, r18
 7d2:	33 1f       	adc	r19, r19
 7d4:	22 0f       	add	r18, r18
 7d6:	33 1f       	adc	r19, r19
 7d8:	ce 01       	movw	r24, r28
 7da:	82 0f       	add	r24, r18
 7dc:	93 1f       	adc	r25, r19
 7de:	84 0f       	add	r24, r20
 7e0:	95 1f       	adc	r25, r21
 7e2:	23 81       	ldd	r18, Z+3	; 0x03
 7e4:	82 0f       	add	r24, r18
 7e6:	91 1d       	adc	r25, r1
 7e8:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x1>
 7ec:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
  y_value = data[4]*1000+data[5]*100+data[6]*10+data[7];
 7f0:	24 81       	ldd	r18, Z+4	; 0x04
 7f2:	26 9f       	mul	r18, r22
 7f4:	c0 01       	movw	r24, r0
 7f6:	27 9f       	mul	r18, r23
 7f8:	90 0d       	add	r25, r0
 7fa:	11 24       	eor	r1, r1
 7fc:	25 81       	ldd	r18, Z+5	; 0x05
 7fe:	ac 01       	movw	r20, r24
 800:	a2 9f       	mul	r26, r18
 802:	40 0d       	add	r20, r0
 804:	51 1d       	adc	r21, r1
 806:	11 24       	eor	r1, r1
 808:	96 81       	ldd	r25, Z+6	; 0x06
 80a:	89 2f       	mov	r24, r25
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	bc 01       	movw	r22, r24
 810:	66 0f       	add	r22, r22
 812:	77 1f       	adc	r23, r23
 814:	9c 01       	movw	r18, r24
 816:	22 0f       	add	r18, r18
 818:	33 1f       	adc	r19, r19
 81a:	22 0f       	add	r18, r18
 81c:	33 1f       	adc	r19, r19
 81e:	22 0f       	add	r18, r18
 820:	33 1f       	adc	r19, r19
 822:	cb 01       	movw	r24, r22
 824:	82 0f       	add	r24, r18
 826:	93 1f       	adc	r25, r19
 828:	84 0f       	add	r24, r20
 82a:	95 1f       	adc	r25, r21
 82c:	27 81       	ldd	r18, Z+7	; 0x07
 82e:	82 0f       	add	r24, r18
 830:	91 1d       	adc	r25, r1
 832:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <y_value+0x1>
 836:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <y_value>
}
 83a:	ff 91       	pop	r31
 83c:	ef 91       	pop	r30
 83e:	df 91       	pop	r29
 840:	cf 91       	pop	r28
 842:	bf 91       	pop	r27
 844:	af 91       	pop	r26
 846:	9f 91       	pop	r25
 848:	8f 91       	pop	r24
 84a:	7f 91       	pop	r23
 84c:	6f 91       	pop	r22
 84e:	5f 91       	pop	r21
 850:	4f 91       	pop	r20
 852:	3f 91       	pop	r19
 854:	2f 91       	pop	r18
 856:	0f 90       	pop	r0
 858:	0f be       	out	0x3f, r0	; 63
 85a:	0f 90       	pop	r0
 85c:	1f 90       	pop	r1
 85e:	18 95       	reti

00000860 <Spi_Init_Slave>:
	SPCR |= (1<<SPR0)|(1<<SPR1);     // divided clock by 128
	SPCR |= (1<<SPE);                // Enable SPI
}
void Spi_Init_Slave()
{
	DDRB &= ~((1<<PB4)|(1<<PB5)|(1<<PB7));   // SCK, MOSI and SS as inputs
 860:	87 b3       	in	r24, 0x17	; 23
 862:	8f 74       	andi	r24, 0x4F	; 79
 864:	87 bb       	out	0x17, r24	; 23
	DDRB |= (1<<PB6);                    // MISO as output
 866:	be 9a       	sbi	0x17, 6	; 23

	SPCR |= (1<<SPIE);
 868:	6f 9a       	sbi	0x0d, 7	; 13
	SPCR &= ~(1<<MSTR);                // Set as slave
 86a:	6c 98       	cbi	0x0d, 4	; 13
	SPCR |= (1<<SPR0)|(1<<SPR1);       // divide clock by 128
 86c:	8d b1       	in	r24, 0x0d	; 13
 86e:	83 60       	ori	r24, 0x03	; 3
 870:	8d b9       	out	0x0d, r24	; 13
	SPCR |= (1<<SPE);
 872:	6e 9a       	sbi	0x0d, 6	; 13
 874:	08 95       	ret

00000876 <Spi_Read>:
}
unsigned char Spi_Read()
{
	while(!(SPSR & (1<<SPIF)));    // wait until all data is received
 876:	77 9b       	sbis	0x0e, 7	; 14
 878:	fe cf       	rjmp	.-4      	; 0x876 <Spi_Read>
	return SPDR;
 87a:	8f b1       	in	r24, 0x0f	; 15
}
 87c:	08 95       	ret

0000087e <Spi_Read_Text>:
void Spi_Read_Text(char *Output, unsigned int length)
{
 87e:	0f 93       	push	r16
 880:	1f 93       	push	r17
 882:	cf 93       	push	r28
 884:	df 93       	push	r29
	for(int i=0;i<length;i++)
 886:	61 15       	cp	r22, r1
 888:	71 05       	cpc	r23, r1
 88a:	51 f0       	breq	.+20     	; 0x8a0 <Spi_Read_Text+0x22>
 88c:	8c 01       	movw	r16, r24
 88e:	ec 01       	movw	r28, r24
 890:	06 0f       	add	r16, r22
 892:	17 1f       	adc	r17, r23
	Output[i] = Spi_Read();
 894:	0e 94 3b 04 	call	0x876	; 0x876 <Spi_Read>
 898:	89 93       	st	Y+, r24
	while(!(SPSR & (1<<SPIF)));    // wait until all data is received
	return SPDR;
}
void Spi_Read_Text(char *Output, unsigned int length)
{
	for(int i=0;i<length;i++)
 89a:	c0 17       	cp	r28, r16
 89c:	d1 07       	cpc	r29, r17
 89e:	d1 f7       	brne	.-12     	; 0x894 <Spi_Read_Text+0x16>
	Output[i] = Spi_Read();
}
 8a0:	df 91       	pop	r29
 8a2:	cf 91       	pop	r28
 8a4:	1f 91       	pop	r17
 8a6:	0f 91       	pop	r16
 8a8:	08 95       	ret

000008aa <__umulhisi3>:
 8aa:	a2 9f       	mul	r26, r18
 8ac:	b0 01       	movw	r22, r0
 8ae:	b3 9f       	mul	r27, r19
 8b0:	c0 01       	movw	r24, r0
 8b2:	a3 9f       	mul	r26, r19
 8b4:	70 0d       	add	r23, r0
 8b6:	81 1d       	adc	r24, r1
 8b8:	11 24       	eor	r1, r1
 8ba:	91 1d       	adc	r25, r1
 8bc:	b2 9f       	mul	r27, r18
 8be:	70 0d       	add	r23, r0
 8c0:	81 1d       	adc	r24, r1
 8c2:	11 24       	eor	r1, r1
 8c4:	91 1d       	adc	r25, r1
 8c6:	08 95       	ret

000008c8 <_exit>:
 8c8:	f8 94       	cli

000008ca <__stop_program>:
 8ca:	ff cf       	rjmp	.-2      	; 0x8ca <__stop_program>
